Report Generated by TOOL:	xmbrowse	19.03-s013
Date: Thu May 28 08:13:40 PM WEST 2020
Directory: /afs/.ist.utl.pt/users/7/9/ist426079/PTFSE/P2
Open Log Files: hal.log
Current Filters: None
Total: Errors: 2  Warnings: 842  Notes: 106  Suppressed: None
Snapshot: worklib.top:v
---------------------------------------------------------


Severity: Error (2)
  Category: FSM (2)
    Tag: TERMST (1)
      *E,TERMST (./controller.v,48|0): In module/design-unit 'controller', FSM for state register 'state' has terminal states 0, 3.
        *E,TERMST (./controller.v,49|0):: Source HDL information for the error/warning mentioned above.
        *E,TERMST (./controller.v,55|0):: Source HDL information for the error/warning mentioned above.
    Tag: UNRCHS (1)
      *E,UNRCHS (./controller.v,48|0): In module/design-unit 'controller', FSM for state register 'state' has unreachable states 4.
        *E,UNRCHS (./controller.v,60|0):: Source HDL information for the error/warning mentioned above.
Severity: Warning (996)
  Category: Unclassified (1)
    Tag: CUVWSP (1)
      *W,CUVWSP (./top.v,59|29): 1 output port was not connected:
        *W,CUVWSP (./controller.v,13):: finish
  Category: ALL_TOOL (88)
    Tag: PRTSNP (1)
      *W,PRTSNP (No source,0|0): Design is partially elaborated. Connectivity information may not be complete.
    Tag: UNCINW (87)
      *W,UNCINW (./circuito06_scan_syn.v,33|0): Component instance is not fully bound (coda1_reg[0]).
      *W,UNCINW (./circuito06_scan_syn.v,35|0): Component instance is not fully bound (coda1_reg[1]).
      *W,UNCINW (./circuito06_scan_syn.v,37|0): Component instance is not fully bound (coda1_reg[2]).
      *W,UNCINW (./circuito06_scan_syn.v,39|0): Component instance is not fully bound (coda2_reg[0]).
      *W,UNCINW (./circuito06_scan_syn.v,41|0): Component instance is not fully bound (coda2_reg[1]).
      *W,UNCINW (./circuito06_scan_syn.v,43|0): Component instance is not fully bound (coda2_reg[2]).
      *W,UNCINW (./circuito06_scan_syn.v,45|0): Component instance is not fully bound (coda3_reg[2]).
      *W,UNCINW (./circuito06_scan_syn.v,47|0): Component instance is not fully bound (coda3_reg[0]).
      *W,UNCINW (./circuito06_scan_syn.v,49|0): Component instance is not fully bound (coda3_reg[1]).
      *W,UNCINW (./circuito06_scan_syn.v,51|0): Component instance is not fully bound (coda0_reg[0]).
      *W,UNCINW (./circuito06_scan_syn.v,53|0): Component instance is not fully bound (coda0_reg[2]).
      *W,UNCINW (./circuito06_scan_syn.v,55|0): Component instance is not fully bound (coda0_reg[1]).
      *W,UNCINW (./circuito06_scan_syn.v,57|0): Component instance is not fully bound (g1978).
      *W,UNCINW (./circuito06_scan_syn.v,58|0): Component instance is not fully bound (g1977).
      *W,UNCINW (./circuito06_scan_syn.v,59|0): Component instance is not fully bound (g1979).
      *W,UNCINW (./circuito06_scan_syn.v,60|0): Component instance is not fully bound (g1975).
      *W,UNCINW (./circuito06_scan_syn.v,61|0): Component instance is not fully bound (g1976).
      *W,UNCINW (./circuito06_scan_syn.v,62|0): Component instance is not fully bound (g1974).
      *W,UNCINW (./circuito06_scan_syn.v,63|0): Component instance is not fully bound (g1980).
      *W,UNCINW (./circuito06_scan_syn.v,64|0): Component instance is not fully bound (g1987).
      *W,UNCINW (./circuito06_scan_syn.v,65|0): Component instance is not fully bound (g1988).
      *W,UNCINW (./circuito06_scan_syn.v,66|0): Component instance is not fully bound (g1991).
      *W,UNCINW (./circuito06_scan_syn.v,68|0): Component instance is not fully bound (g1992).
      *W,UNCINW (./circuito06_scan_syn.v,70|0): Component instance is not fully bound (g1993).
      *W,UNCINW (./circuito06_scan_syn.v,72|0): Component instance is not fully bound (g1994).
      *W,UNCINW (./circuito06_scan_syn.v,74|0): Component instance is not fully bound (g1984).
      *W,UNCINW (./circuito06_scan_syn.v,76|0): Component instance is not fully bound (g1985).
      *W,UNCINW (./circuito06_scan_syn.v,78|0): Component instance is not fully bound (g1986).
      *W,UNCINW (./circuito06_scan_syn.v,80|0): Component instance is not fully bound (g1989).
      *W,UNCINW (./circuito06_scan_syn.v,82|0): Component instance is not fully bound (g1990).
      *W,UNCINW (./circuito06_scan_syn.v,84|0): Component instance is not fully bound (g1981).
      *W,UNCINW (./circuito06_scan_syn.v,85|0): Component instance is not fully bound (g1982).
      *W,UNCINW (./circuito06_scan_syn.v,86|0): Component instance is not fully bound (g1983).
      *W,UNCINW (./circuito06_scan_syn.v,87|0): Component instance is not fully bound (g1995).
      *W,UNCINW (./circuito06_scan_syn.v,88|0): Component instance is not fully bound (g2001).
      *W,UNCINW (./circuito06_scan_syn.v,89|0): Component instance is not fully bound (g1996).
      *W,UNCINW (./circuito06_scan_syn.v,90|0): Component instance is not fully bound (g2002).
      *W,UNCINW (./circuito06_scan_syn.v,91|0): Component instance is not fully bound (g2005).
      *W,UNCINW (./circuito06_scan_syn.v,92|0): Component instance is not fully bound (grant_reg[0]).
      *W,UNCINW (./circuito06_scan_syn.v,94|0): Component instance is not fully bound (grant_reg[1]).
      *W,UNCINW (./circuito06_scan_syn.v,96|0): Component instance is not fully bound (grant_reg[2]).
      *W,UNCINW (./circuito06_scan_syn.v,98|0): Component instance is not fully bound (grant_reg[3]).
      *W,UNCINW (./circuito06_scan_syn.v,100|0): Component instance is not fully bound (g2004).
      *W,UNCINW (./circuito06_scan_syn.v,101|0): Component instance is not fully bound (g2003).
      *W,UNCINW (./circuito06_scan_syn.v,103|0): Component instance is not fully bound (g2006).
      *W,UNCINW (./circuito06_scan_syn.v,105|0): Component instance is not fully bound (g2012).
      *W,UNCINW (./circuito06_scan_syn.v,106|0): Component instance is not fully bound (fu2_reg).
      *W,UNCINW (./circuito06_scan_syn.v,108|0): Component instance is not fully bound (fu4_reg).
      *W,UNCINW (./circuito06_scan_syn.v,110|0): Component instance is not fully bound (fu1_reg).
      *W,UNCINW (./circuito06_scan_syn.v,112|0): Component instance is not fully bound (fu3_reg).
      *W,UNCINW (./circuito06_scan_syn.v,114|0): Component instance is not fully bound (g2022).
      *W,UNCINW (./circuito06_scan_syn.v,115|0): Component instance is not fully bound (g2011).
      *W,UNCINW (./circuito06_scan_syn.v,116|0): Component instance is not fully bound (g2013).
      *W,UNCINW (./circuito06_scan_syn.v,117|0): Component instance is not fully bound (ru2_reg).
      *W,UNCINW (./circuito06_scan_syn.v,119|0): Component instance is not fully bound (ru1_reg).
      *W,UNCINW (./circuito06_scan_syn.v,121|0): Component instance is not fully bound (ru3_reg).
      *W,UNCINW (./circuito06_scan_syn.v,123|0): Component instance is not fully bound (ru4_reg).
      *W,UNCINW (./circuito06_scan_syn.v,125|0): Component instance is not fully bound (stato_reg[1]).
      *W,UNCINW (./circuito06_scan_syn.v,127|0): Component instance is not fully bound (g2018).
      *W,UNCINW (./circuito06_scan_syn.v,128|0): Component instance is not fully bound (g2019).
      *W,UNCINW (./circuito06_scan_syn.v,129|0): Component instance is not fully bound (g2023).
      *W,UNCINW (./circuito06_scan_syn.v,130|0): Component instance is not fully bound (g2024).
      *W,UNCINW (./circuito06_scan_syn.v,131|0): Component instance is not fully bound (g2020).
      *W,UNCINW (./circuito06_scan_syn.v,132|0): Component instance is not fully bound (g2026).
      *W,UNCINW (./circuito06_scan_syn.v,133|0): Component instance is not fully bound (g2027).
      *W,UNCINW (./circuito06_scan_syn.v,134|0): Component instance is not fully bound (g2028).
      *W,UNCINW (./circuito06_scan_syn.v,135|0): Component instance is not fully bound (g2029).
      *W,UNCINW (./circuito06_scan_syn.v,136|0): Component instance is not fully bound (stato_reg[0]).
      *W,UNCINW (./circuito06_scan_syn.v,138|0): Component instance is not fully bound (g2021).
      *W,UNCINW (./circuito06_scan_syn.v,139|0): Component instance is not fully bound (g2030).
      *W,UNCINW (./circuito06_scan_syn.v,140|0): Component instance is not fully bound (g2031).
      *W,UNCINW (./circuito06_scan_syn.v,141|0): Component instance is not fully bound (g2032).
      *W,UNCINW (./circuito06_scan_syn.v,142|0): Component instance is not fully bound (g2033).
      *W,UNCINW (./circuito06_scan_syn.v,143|0): Component instance is not fully bound (g2036).
      *W,UNCINW (./circuito06_scan_syn.v,144|0): Component instance is not fully bound (g2038).
      *W,UNCINW (./circuito06_scan_syn.v,145|0): Component instance is not fully bound (g2035).
      *W,UNCINW (./circuito06_scan_syn.v,146|0): Component instance is not fully bound (g2037).
      *W,UNCINW (./circuito06_scan_syn.v,147|0): Component instance is not fully bound (g2039).
      *W,UNCINW (./circuito06_scan_syn.v,148|0): Component instance is not fully bound (g2040).
      *W,UNCINW (./circuito06_scan_syn.v,149|0): Component instance is not fully bound (g2042).
      *W,UNCINW (./circuito06_scan_syn.v,150|0): Component instance is not fully bound (g2046).
      *W,UNCINW (./circuito06_scan_syn.v,151|0): Component instance is not fully bound (g2048).
      *W,UNCINW (./circuito06_scan_syn.v,152|0): Component instance is not fully bound (g2045).
      *W,UNCINW (./circuito06_scan_syn.v,153|0): Component instance is not fully bound (g2041).
      *W,UNCINW (./circuito06_scan_syn.v,154|0): Component instance is not fully bound (g2043).
      *W,UNCINW (./circuito06_scan_syn.v,155|0): Component instance is not fully bound (g2044).
      *W,UNCINW (./circuito06_scan_syn.v,156|0): Component instance is not fully bound (g2047).
  Category: DFT (13 unique/2 shared/15 total)
    Tag: FFWASR (13)
      *W,FFWASR (./controller.v,43|0): Flip-flop 'state' does not have any asynchronous set or reset.
      *W,FFWASR (./controller.v,80|0): Flip-flop 'toggle_r' does not have any asynchronous set or reset.
      *W,FFWASR (./controller.v,96|0): Flip-flop 'bist_end' does not have any asynchronous set or reset.
      *W,FFWASR (./lfsr.v,34|0): Flip-flop 'dff[0]' does not have any asynchronous set or reset.
      *W,FFWASR (./lfsr.v,34|0): Flip-flop 'dff[3:1]' does not have any asynchronous set or reset.
      *W,FFWASR (./misr.v,73|0): Flip-flop 'dff[0]' does not have any asynchronous set or reset.
      *W,FFWASR (./misr.v,74|0): Flip-flop 'dff[1]' does not have any asynchronous set or reset.
      *W,FFWASR (./misr.v,75|0): Flip-flop 'dff[2]' does not have any asynchronous set or reset.
      *W,FFWASR (./misr.v,76|0): Flip-flop 'dff[3]' does not have any asynchronous set or reset.
      *W,FFWASR (./misr.v,77|0): Flip-flop 'dff[4]' does not have any asynchronous set or reset.
      *W,FFWASR (./misr.v,78|0): Flip-flop 'dff[5]' does not have any asynchronous set or reset.
      *W,FFWASR (./misr.v,79|0): Flip-flop 'dff[6]' does not have any asynchronous set or reset.
      *W,FFWASR (./misr.v,80|0): Flip-flop 'dff[7]' does not have any asynchronous set or reset.
    Tag: TPOUNR (2)
      *W,TPOUNR (./top.v,53|0): Output 'grant_o' of top-level module is not a register.
      *W,TPOUNR (./top.v,55|0): Output 'pass_fail' of top-level module is not a register.
  Category: FSM (3)
    Tag: BADFSM (1)
      *W,BADFSM (./controller.v,35|0): In module/design-unit 'controller', FSM for state register 'state' does not adhere to modeling style guidelines.
        *W,BADFSM (./controller.v,35|0):: Source HDL information for the error/warning mentioned above.
        *W,BADFSM (./controller.v,47|0):: Source HDL information for the error/warning mentioned above.
        *W,BADFSM (./controller.v,73|0):: Source HDL information for the error/warning mentioned above.
        *W,BADFSM (./controller.v,92|0):: Source HDL information for the error/warning mentioned above.
        *W,BADFSM (./controller.v,67|0):: Source HDL information for the error/warning mentioned above.
        *W,BADFSM (./controller.v,68|0):: Source HDL information for the error/warning mentioned above.
        *W,BADFSM (./controller.v,69|0):: Source HDL information for the error/warning mentioned above.
        *W,BADFSM (./controller.v,71|0):: Source HDL information for the error/warning mentioned above.
    Tag: EXTFSM (1)
      *W,EXTFSM (./controller.v,6|0): Extraneous logic present in module/design-unit 'controller' that encodes an FSM.
    Tag: TRNMBT (1)
      *W,TRNMBT (./controller.v,51|0): For the specified state '1', the state value changes by more than one bits on transition to state(s): 2.
        *W,TRNMBT (./controller.v,52|0):: Source HDL information for the error/warning mentioned above.
  Category: RMM (0 unique/138 shared/138 total)
    Tag: ATLGLC (1)
      *W,ATLGLC (./top.v,4|0): Glue logic inferred in top-level module/design-unit 'top'.
        *W,ATLGLC (./top.v,46):: HDL-statement inferred as glue logic.
        *W,ATLGLC (./top.v,48):: HDL-statement inferred as glue logic.
        *W,ATLGLC (./top.v,49):: HDL-statement inferred as glue logic.
        *W,ATLGLC (./top.v,50):: HDL-statement inferred as glue logic.
        *W,ATLGLC (./top.v,51):: HDL-statement inferred as glue logic.
        *W,ATLGLC (./top.v,53):: HDL-statement inferred as glue logic.
        *W,ATLGLC (./top.v,55):: HDL-statement inferred as glue logic.
        *W,ATLGLC (./top.v,56):: HDL-statement inferred as glue logic.
    Tag: DIFCLK (3)
      *W,DIFCLK (./top.v,59|0): Clock 'clock' is being renamed to 'clk'.
      *W,DIFCLK (./top.v,76|0): Clock 'clock' is being renamed to 'clk'.
      *W,DIFCLK (./top.v,98|0): Clock 'clock' is being renamed to 'clk'.
    Tag: DIFFMN (2)
      *W,DIFFMN (./wrappers.v,3|0): Module name 'lfsrmux' differs from file name 'wrappers.v'.
      *W,DIFFMN (./circuito06_scan_syn.v,6|0): Module name 'circuito06' differs from file name 'circuito06_scan_syn.v'.
    Tag: DIFRST (2)
      *W,DIFRST (./top.v,76|0): Set/Reset 'module_reset_w' is being renamed to 'rst'.
      *W,DIFRST (./top.v,98|0): Set/Reset 'module_reset_w' is being renamed to 'rst'.
    Tag: KEYWOD (2)
      *W,KEYWOD (./wrappers.v,7|0): VHDL reserved word 'in' used as an identifier or label.
      *W,KEYWOD (./lfsr.v,12|0): VHDL reserved word 'out' used as an identifier or label.
    Tag: LCVARN (87)
      *W,LCVARN (./circuito06_scan_syn.v,33|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,35|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,37|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,39|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,41|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,43|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,45|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,47|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,49|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,51|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,53|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,55|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,57|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,58|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,59|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,60|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,61|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,62|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,63|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,64|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,65|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,66|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,68|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,70|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,72|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,74|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,76|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,78|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,80|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,82|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,84|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,85|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,86|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,87|0): Module name 'INV3' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,88|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,89|0): Module name 'AOI211' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,90|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,91|0): Module name 'AOI211' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,92|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,94|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,96|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,98|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,100|0): Module name 'OAI2111' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,101|0): Module name 'AOI2111' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,103|0): Module name 'AOI2111' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,105|0): Module name 'OAI311' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,106|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,108|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,110|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,112|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,114|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,115|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,116|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,117|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,119|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,121|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,123|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,125|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,127|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,128|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,129|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,130|0): Module name 'IMUX20' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,131|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,132|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,133|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,134|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,135|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,136|0): Module name 'TFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,138|0): Module name 'NAND31' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,139|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,140|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,141|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,142|0): Module name 'NOR40' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,143|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,144|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,145|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,146|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,147|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,148|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,149|0): Module name 'CLKIN2' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,150|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,151|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,152|0): Module name 'CLKIN2' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,153|0): Module name 'CLKIN2' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,154|0): Module name 'CLKIN2' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,155|0): Module name 'INV0' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,156|0): Module name 'CLKIN2' uses uppercase characters.
    Tag: NOBLKN (8)
      *W,NOBLKN (./controller.v,35|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./controller.v,47|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./controller.v,73|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./controller.v,92|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./controller.v,104|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./wrappers.v,16|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./lfsr.v,29|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./misr.v,68|0): Each block should be labeled with a meaningful name.
    Tag: STYVAL (14)
      *W,STYVAL (./top.v,23|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
      *W,STYVAL (./top.v,32|0): Numeric value '3' used for identifier 'misr_grant_o_w'. Use constants to avoid portability issues.
      *W,STYVAL (./top.v,34|0): Numeric value '3' used for identifier 'lsfr_in_bus_w'. Use constants to avoid portability issues.
      *W,STYVAL (./top.v,35|0): Numeric value '3' used for identifier 'request_bus_w'. Use constants to avoid portability issues.
      *W,STYVAL (./top.v,36|0): Numeric value '3' used for identifier 'input_mux_out_w'. Use constants to avoid portability issues.
      *W,STYVAL (./wrappers.v,11|0): Numeric value '4' used for identifier 'outport'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,10|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,14|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,16|0): Numeric value '2' used for identifier 'coda1'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,17|0): Numeric value '2' used for identifier 'coda2'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,18|0): Numeric value '2' used for identifier 'coda3'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,19|0): Numeric value '2' used for identifier 'coda0'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,20|0): Numeric value '1' used for identifier 'stato'. Use constants to avoid portability issues.
      *W,STYVAL (./misr.v,17|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
    Tag: TPOUNR (2)
      *W,TPOUNR (./top.v,53|0): Output 'grant_o' of top-level module is not a register.
      *W,TPOUNR (./top.v,55|0): Output 'pass_fail' of top-level module is not a register.
    Tag: UCCONN (17)
      *W,UCCONN (./top.v,2|0): Lowercase characters used for identifier 'misr8_top'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./top.v,6|0): Lowercase characters used for identifier 'misr8_top'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./top.v,11|0): Lowercase characters used for identifier 'misr16_top'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./controller.v,3|0): Lowercase characters used for identifier 'reportval'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./controller.v,19|0): Lowercase characters used for identifier 'reportval'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./controller.v,22|0): Lowercase characters used for identifier 'testval'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./controller.v,18|0): Lowercase characters used for identifier 'IDLE_s'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./controller.v,18|0): Lowercase characters used for identifier 'START_s'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./controller.v,18|0): Lowercase characters used for identifier 'INIT_s'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./controller.v,18|0): Lowercase characters used for identifier 'RUNNING_s'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./controller.v,18|0): Lowercase characters used for identifier 'FINISH_s'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./misr.v,2|0): Lowercase characters used for identifier 'misr8'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./misr.v,6|0): Lowercase characters used for identifier 'misr16'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./misr.v,10|0): Lowercase characters used for identifier 'misr8'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./misr.v,25|0): Lowercase characters used for identifier 'misr16'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./misr.v,60|0): Lowercase characters used for identifier 'misr8'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./misr.v,65|0): Lowercase characters used for identifier 'seed'. Use uppercase characters for names of constants and user-defined types.
  Category: RTL_CODINGSTYLE_MIXED (55 unique/14 shared/69 total)
    Tag: CNSTCN (2)
      *W,CNSTCN (./controller.v,56|0): Conditional expression is statically evaluated to false.
      *W,CNSTCN (./controller.v,79|0): Conditional expression is statically evaluated to true.
    Tag: INTTOB (6)
      *W,INTTOB (./controller.v,75|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit bist_controller.
      *W,INTTOB (./controller.v,83|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit bist_controller.
      *W,INTTOB (./controller.v,94|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit bist_controller.
      *W,INTTOB (./controller.v,96|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit bist_controller.
      *W,INTTOB (./controller.v,106|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit bist_controller.
      *W,INTTOB (./controller.v,109|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit bist_controller.
    Tag: NUMSUF (4)
      *W,NUMSUF (./circuito06_scan_syn.v,16|0): Identifier 'coda1' has a numeric value suffix.
      *W,NUMSUF (./circuito06_scan_syn.v,17|0): Identifier 'coda2' has a numeric value suffix.
      *W,NUMSUF (./circuito06_scan_syn.v,18|0): Identifier 'coda3' has a numeric value suffix.
      *W,NUMSUF (./circuito06_scan_syn.v,19|0): Identifier 'coda0' has a numeric value suffix.
    Tag: POIASG (1)
      *W,POIASG (./controller.v,85|0): The result of addition operation may lead to a potential overflow in module/design-unit bist_controller.
        *W,POIASG (./controller.v,85):: LHS operand 'ncounter' is 11 bit(s), RHS operand 'ncounter + 1' is 32 bit(s).
        *W,POIASG (./controller.v,85):: Increase the size of LHS by 21 bit(s).
    Tag: STYVAL (14)
      *W,STYVAL (./top.v,23|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
      *W,STYVAL (./top.v,32|0): Numeric value '3' used for identifier 'misr_grant_o_w'. Use constants to avoid portability issues.
      *W,STYVAL (./top.v,34|0): Numeric value '3' used for identifier 'lsfr_in_bus_w'. Use constants to avoid portability issues.
      *W,STYVAL (./top.v,35|0): Numeric value '3' used for identifier 'request_bus_w'. Use constants to avoid portability issues.
      *W,STYVAL (./top.v,36|0): Numeric value '3' used for identifier 'input_mux_out_w'. Use constants to avoid portability issues.
      *W,STYVAL (./wrappers.v,11|0): Numeric value '4' used for identifier 'outport'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,10|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,14|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,16|0): Numeric value '2' used for identifier 'coda1'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,17|0): Numeric value '2' used for identifier 'coda2'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,18|0): Numeric value '2' used for identifier 'coda3'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,19|0): Numeric value '2' used for identifier 'coda0'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,20|0): Numeric value '1' used for identifier 'stato'. Use constants to avoid portability issues.
      *W,STYVAL (./misr.v,17|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
    Tag: SYNPRT (5)
      *W,SYNPRT (./controller.v,67|0): Output port 'init' is assigned asynchronously.
      *W,SYNPRT (./controller.v,71|0): Output port 'toggle' is assigned asynchronously.
      *W,SYNPRT (./controller.v,68|0): Output port 'running' is assigned asynchronously.
      *W,SYNPRT (./controller.v,69|0): Output port 'finish' is assigned asynchronously.
      *W,SYNPRT (./wrappers.v,20|0): Output port 'outport' is assigned asynchronously.
    Tag: TRUNCZ (16)
      *W,TRUNCZ (./controller.v,37|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
      *W,TRUNCZ (./controller.v,40|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
      *W,TRUNCZ (./controller.v,50|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
      *W,TRUNCZ (./controller.v,52|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
      *W,TRUNCZ (./controller.v,54|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
      *W,TRUNCZ (./controller.v,57|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
      *W,TRUNCZ (./controller.v,59|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
      *W,TRUNCZ (./controller.v,61|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
      *W,TRUNCZ (./controller.v,63|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
      *W,TRUNCZ (./controller.v,75|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
      *W,TRUNCZ (./controller.v,76|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
      *W,TRUNCZ (./controller.v,83|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
      *W,TRUNCZ (./controller.v,94|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
      *W,TRUNCZ (./controller.v,96|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
      *W,TRUNCZ (./controller.v,106|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
      *W,TRUNCZ (./controller.v,109|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
    Tag: UELCIT (5)
      *W,UELCIT (./controller.v,49|0): Unequal length in case item comparison (selector is 3 bits, case tag expression is 32 bits) in module/design-unit bist_controller.
      *W,UELCIT (./controller.v,51|0): Unequal length in case item comparison (selector is 3 bits, case tag expression is 32 bits) in module/design-unit bist_controller.
      *W,UELCIT (./controller.v,53|0): Unequal length in case item comparison (selector is 3 bits, case tag expression is 32 bits) in module/design-unit bist_controller.
      *W,UELCIT (./controller.v,55|0): Unequal length in case item comparison (selector is 3 bits, case tag expression is 32 bits) in module/design-unit bist_controller.
      *W,UELCIT (./controller.v,60|0): Unequal length in case item comparison (selector is 3 bits, case tag expression is 32 bits) in module/design-unit bist_controller.
    Tag: UELOPR (1)
      *W,UELOPR (./controller.v,85|0): Unequal length operand in bit/arithmetic operator PLUS in module/design-unit bist_controller.
        *W,UELOPR (./controller.v,85):: LHS operand 'ncounter' is 11 bits, RHS operand '1' is 32 bits.
    Tag: ULCMPE (9)
      *W,ULCMPE (./controller.v,39|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit bist_controller. LHS operand is 3 bits, RHS operand is 32 bits.
      *W,ULCMPE (./controller.v,56|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit bist_controller. LHS operand is 11 bits, RHS operand is 32 bits.
      *W,ULCMPE (./controller.v,74|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit bist_controller. LHS operand is 3 bits, RHS operand is 32 bits.
      *W,ULCMPE (./controller.v,78|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit bist_controller. LHS operand is 3 bits, RHS operand is 32 bits.
      *W,ULCMPE (./controller.v,95|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit bist_controller. LHS operand is 3 bits, RHS operand is 32 bits.
      *W,ULCMPE (./controller.v,67|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit bist_controller. LHS operand is 3 bits, RHS operand is 32 bits.
      *W,ULCMPE (./controller.v,68|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit bist_controller. LHS operand is 3 bits, RHS operand is 32 bits.
      *W,ULCMPE (./controller.v,69|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit bist_controller. LHS operand is 3 bits, RHS operand is 32 bits.
      *W,ULCMPE (./controller.v,71|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit bist_controller. LHS operand is 3 bits, RHS operand is 32 bits.
    Tag: ULRELE (2)
      *W,ULRELE (./controller.v,79|0): Unequal length operands in relational operator (padding produces incorrect result) in module/design-unit bist_controller -- LHS operand is 11 bits, RHS operand is 32 bits.
      *W,ULRELE (./controller.v,68|0): Unequal length operands in relational operator (padding produces incorrect result) in module/design-unit bist_controller -- LHS operand is 11 bits, RHS operand is 32 bits.
    Tag: UNCONN (1)
      *W,UNCONN (./top.v,59|0): Output port 'finish' defined in design-unit 'controller' is not connected in its instance 'bist_controller'.
    Tag: UNCONO (1)
      *W,UNCONO (./top.v,59|0): Port 'finish' (which is being used as an output) of entity/module 'controller' is being driven inside the design, but not connected (either partially or completely) in its instance 'top.bist_controller'.
    Tag: UNDRIV (2)
      *W,UNDRIV (./circuito06_scan_syn.v,14|0): Primary output/inout 'grant_o'  is not driven in the module 'circuito06'.
      *W,UNDRIV (./circuito06_scan_syn.v,15|0): Primary output/inout 'scan_out'  is not driven in the module 'circuito06'.
  Category: RTL_CODINGSTYLE_VERILOG (164 unique/1 shared/165 total)
    Tag: CDWARN (19)
      *W,CDWARN (./top.v,2|0): The compiler directive '`define' is used in the RTL.
      *W,CDWARN (./top.v,6|0): The compiler directive '`ifdef' is used in the RTL.
      *W,CDWARN (./top.v,9|0): The compiler directive '`endif' is used in the RTL.
      *W,CDWARN (./top.v,11|0): The compiler directive '`ifdef' is used in the RTL.
      *W,CDWARN (./top.v,14|0): The compiler directive '`endif' is used in the RTL.
      *W,CDWARN (./controller.v,3|0): The compiler directive '`define' is used in the RTL.
      *W,CDWARN (./controller.v,19|0): The compiler directive '`ifdef' is used in the RTL.
      *W,CDWARN (./controller.v,21|0): The compiler directive '`endif' is used in the RTL.
      *W,CDWARN (./controller.v,22|0): The compiler directive '`ifdef' is used in the RTL.
      *W,CDWARN (./controller.v,24|0): The compiler directive '`endif' is used in the RTL.
      *W,CDWARN (./misr.v,2|0): The compiler directive '`define' is used in the RTL.
      *W,CDWARN (./misr.v,6|0): The compiler directive '`ifdef' is used in the RTL.
      *W,CDWARN (./misr.v,8|0): The compiler directive '`endif' is used in the RTL.
      *W,CDWARN (./misr.v,10|0): The compiler directive '`ifdef' is used in the RTL.
      *W,CDWARN (./misr.v,12|0): The compiler directive '`endif' is used in the RTL.
      *W,CDWARN (./misr.v,25|0): The compiler directive '`ifdef' is used in the RTL.
      *W,CDWARN (./misr.v,58|0): The compiler directive '`endif' is used in the RTL.
      *W,CDWARN (./misr.v,60|0): The compiler directive '`ifdef' is used in the RTL.
      *W,CDWARN (./misr.v,87|0): The compiler directive '`endif' is used in the RTL.
    Tag: IFDDEF (3)
      *W,IFDDEF (./top.v,2|0): Macro '`ifdef misr8_top' is defined using `define statement in the same verilog file.
      *W,IFDDEF (./controller.v,3|0): Macro '`ifdef reportval' is defined using `define statement in the same verilog file.
      *W,IFDDEF (./misr.v,2|0): Macro '`ifdef misr8' is defined using `define statement in the same verilog file.
    Tag: IMPDTC (16)
      *W,IMPDTC (./controller.v,37|0): Expression 'IDLE_s' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
      *W,IMPDTC (./controller.v,40|0): Expression 'START_s' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
      *W,IMPDTC (./controller.v,50|0): Expression 'IDLE_s' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
      *W,IMPDTC (./controller.v,52|0): Expression 'INIT_s' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
      *W,IMPDTC (./controller.v,54|0): Expression 'RUNNING_s' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
      *W,IMPDTC (./controller.v,57|0): Expression 'FINISH_s' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
      *W,IMPDTC (./controller.v,59|0): Expression 'RUNNING_s' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
      *W,IMPDTC (./controller.v,61|0): Expression 'IDLE_s' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
      *W,IMPDTC (./controller.v,63|0): Expression 'IDLE_s' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
      *W,IMPDTC (./controller.v,75|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
      *W,IMPDTC (./controller.v,76|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
      *W,IMPDTC (./controller.v,83|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
      *W,IMPDTC (./controller.v,94|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
      *W,IMPDTC (./controller.v,96|0): Expression '1' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
      *W,IMPDTC (./controller.v,106|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
      *W,IMPDTC (./controller.v,109|0): Expression '1' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
    Tag: IMPTYP (1)
      *W,IMPTYP (./controller.v,85|0): Expression 'ncounter + 1' implicitly converted to type 'register' from type 'integer'.
    Tag: LOGAND (1)
      *W,LOGAND (./controller.v,39|0): Bit-wise AND in a conditional expression. Logical AND may have been intended.
    Tag: LOGORP (1)
      *W,LOGORP (./controller.v,74|0): Bit-wise OR in a conditional expression. Logical OR may have been intended.
    Tag: LRGOPR (4)
      *W,LRGOPR (./controller.v,56|0): Arithmetic or relational operation performed on large operands in module/design-unit bist_controller.
      *W,LRGOPR (./controller.v,79|0): Arithmetic or relational operation performed on large operands in module/design-unit bist_controller.
      *W,LRGOPR (./controller.v,85|0): Arithmetic or relational operation performed on large operands in module/design-unit bist_controller.
      *W,LRGOPR (./controller.v,68|0): Arithmetic or relational operation performed on large operands in module/design-unit bist_controller.
    Tag: NBCOMB (1)
      *W,NBCOMB (./controller.v,104|0): Non-blocking assignment encountered in a combinational block.
        *W,NBCOMB (./controller.v,106|0):: Source HDL information for the error/warning mentioned above.
        *W,NBCOMB (./controller.v,109|0):: Source HDL information for the error/warning mentioned above.
    Tag: NBGEND (5)
      *W,NBGEND (./controller.v,42|0): Missing begin/end statement in the 'else' block.
      *W,NBGEND (./controller.v,56|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./controller.v,93|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./controller.v,95|0): Missing begin/end statement in the 'if' block.
      *W,NBGEND (./wrappers.v,17|0): Missing begin/end statement in the 'if' block.
    Tag: PRMBSE (1)
      *W,PRMBSE (./controller.v,20|0): Base not specified for parameter 'NCLOCK'.
    Tag: PRMVAL (10)
      *W,PRMVAL (./top.v,8|0): Bit width not specified for parameter 'MISR_BITS'.
      *W,PRMVAL (./controller.v,18|0): Bit width not specified for parameter 'IDLE_s'.
      *W,PRMVAL (./controller.v,18|0): Bit width not specified for parameter 'START_s'.
      *W,PRMVAL (./controller.v,18|0): Bit width not specified for parameter 'INIT_s'.
      *W,PRMVAL (./controller.v,18|0): Bit width not specified for parameter 'RUNNING_s'.
      *W,PRMVAL (./controller.v,18|0): Bit width not specified for parameter 'FINISH_s'.
      *W,PRMVAL (./controller.v,20|0): Bit width not specified for parameter 'NCLOCK'.
      *W,PRMVAL (./wrappers.v,5|0): Bit width not specified for parameter 'NBIT'.
      *W,PRMVAL (./lfsr.v,5|0): Bit width not specified for parameter 'NBIT'.
      *W,PRMVAL (./misr.v,11|0): Bit width not specified for parameter 'NBIT'.
    Tag: UASWIR (99)
      *W,UASWIR (./circuito06_scan_syn.v,16|0): Wire 'coda1' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,17|0): Wire 'coda2' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,18|0): Wire 'coda3' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,19|0): Wire 'coda0' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,20|0): Wire 'stato' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,21|0): Wire 'fu1' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,21|0): Wire 'fu2' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,21|0): Wire 'fu3' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,21|0): Wire 'fu4' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,21|0): Wire 'n_0' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,21|0): Wire 'n_4' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,21|0): Wire 'n_6' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,21|0): Wire 'n_8' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,22|0): Wire 'n_10' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,22|0): Wire 'n_12' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,22|0): Wire 'n_14' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,22|0): Wire 'n_16' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,22|0): Wire 'n_18' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,22|0): Wire 'n_20' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,22|0): Wire 'n_22' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,22|0): Wire 'n_24' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,23|0): Wire 'n_26' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,23|0): Wire 'n_28' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,23|0): Wire 'n_30' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,23|0): Wire 'n_32' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,23|0): Wire 'n_34' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,23|0): Wire 'n_36' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,23|0): Wire 'n_38' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,23|0): Wire 'n_40' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,24|0): Wire 'n_42' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,24|0): Wire 'n_44' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,24|0): Wire 'n_46' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,24|0): Wire 'n_48' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,24|0): Wire 'n_50' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,24|0): Wire 'n_52' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,24|0): Wire 'n_53' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,24|0): Wire 'n_54' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,25|0): Wire 'n_55' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,25|0): Wire 'n_56' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,25|0): Wire 'n_57' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,25|0): Wire 'n_58' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,25|0): Wire 'n_59' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,25|0): Wire 'n_60' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,25|0): Wire 'n_61' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,25|0): Wire 'n_62' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,26|0): Wire 'n_63' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,26|0): Wire 'n_64' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,26|0): Wire 'n_65' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,26|0): Wire 'n_66' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,26|0): Wire 'n_67' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,26|0): Wire 'n_68' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,26|0): Wire 'n_69' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,26|0): Wire 'n_70' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,27|0): Wire 'n_71' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,27|0): Wire 'n_72' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,27|0): Wire 'n_73' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,27|0): Wire 'n_74' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,27|0): Wire 'n_75' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,27|0): Wire 'n_76' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,27|0): Wire 'n_77' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,27|0): Wire 'n_78' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,28|0): Wire 'n_79' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,28|0): Wire 'n_80' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,28|0): Wire 'n_81' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,28|0): Wire 'n_82' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,28|0): Wire 'n_83' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,28|0): Wire 'n_84' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,28|0): Wire 'n_85' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,28|0): Wire 'n_86' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,29|0): Wire 'n_87' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,29|0): Wire 'n_88' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,29|0): Wire 'n_89' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,29|0): Wire 'n_90' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,29|0): Wire 'n_91' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,29|0): Wire 'n_92' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,29|0): Wire 'n_93' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,29|0): Wire 'n_94' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,30|0): Wire 'n_95' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,30|0): Wire 'n_96' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,30|0): Wire 'n_97' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,30|0): Wire 'n_98' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,30|0): Wire 'n_99' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,30|0): Wire 'n_100' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,30|0): Wire 'n_101' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,30|0): Wire 'n_102' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,31|0): Wire 'n_103' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,31|0): Wire 'n_104' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,31|0): Wire 'n_105' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,31|0): Wire 'n_106' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,31|0): Wire 'n_107' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,31|0): Wire 'n_108' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,31|0): Wire 'n_109' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,31|0): Wire 'n_110' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,32|0): Wire 'n_111' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,32|0): Wire 'n_112' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,32|0): Wire 'ru1' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,32|0): Wire 'ru2' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,32|0): Wire 'ru3' defined in module 'circuito06' is unassigned, but drives at least an object.
      *W,UASWIR (./circuito06_scan_syn.v,32|0): Wire 'ru4' defined in module 'circuito06' is unassigned, but drives at least an object.
    Tag: URAREG (1)
      *W,URAREG (./controller.v,27|0): Local register variable 'complete' defined in module 'controller' is unused (neither read nor assigned).
    Tag: USEMAC (3)
      *W,USEMAC (./controller.v,3|0): Macro 'reportval' is unused.
      *W,USEMAC (./top.v,2|0): Macro 'misr8_top' is unused.
      *W,USEMAC (./misr.v,2|0): Macro 'misr8' is unused.
  Category: RTL_FILEFORMAT_MIXED (377 unique/128 shared/505 total)
    Tag: CTLCHR (375)
      *W,CTLCHR (./top.v,1|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,2|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,3|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,4|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,5|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,6|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,7|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,8|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,9|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,10|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,11|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,12|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,13|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,14|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,15|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,16|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,17|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,18|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,19|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,20|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,21|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,22|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,23|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,24|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,25|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,26|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,27|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,28|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,29|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,30|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,31|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,32|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,33|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,34|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,35|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,36|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,37|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,38|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,39|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,40|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,41|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,42|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,43|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,44|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,45|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,46|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,47|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,48|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,49|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,50|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,51|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,52|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,53|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,54|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,55|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,56|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,57|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,58|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,59|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,60|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,61|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,62|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,63|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,64|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,65|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,66|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,67|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,68|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,69|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,70|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,71|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,72|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,73|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,74|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,75|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,76|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,77|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,78|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,79|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,80|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,81|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,82|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,83|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,84|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,85|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,86|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,87|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,88|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,89|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,90|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,91|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,92|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,93|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,94|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,95|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,96|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,97|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,98|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,99|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,100|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,101|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,102|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,103|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,104|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,105|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,106|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,107|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,108|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./top.v,109|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,1|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,2|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,3|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,4|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,5|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,6|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,7|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,8|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,9|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,10|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,11|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,12|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,13|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,14|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,15|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,16|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,17|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,18|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,19|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,20|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,21|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,22|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,23|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,24|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,25|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,26|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,27|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,28|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,29|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,30|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,31|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,32|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,33|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,34|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,35|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,36|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,37|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,38|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,39|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,40|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,41|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,42|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,43|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,44|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,45|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,46|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,47|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,48|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,49|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,50|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,51|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,52|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,53|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,54|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,55|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,56|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,57|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,58|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,59|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,60|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,61|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,62|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,63|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,64|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,65|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,66|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,67|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,68|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,69|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,70|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,71|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,72|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,73|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,74|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,75|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,76|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,77|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,78|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,79|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,80|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,81|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,82|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,83|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,84|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,85|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,86|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,87|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,88|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,89|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,90|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,91|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,92|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,93|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,94|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,95|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,96|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,97|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,98|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,99|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,100|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,101|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,102|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,103|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,104|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,105|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,106|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,107|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,108|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,109|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,110|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,111|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,112|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,113|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./controller.v,114|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,1|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,2|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,3|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,4|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,5|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,6|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,7|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,8|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,9|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,10|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,11|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,12|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,13|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,14|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,15|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,16|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,17|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,18|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,19|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,20|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,21|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,22|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./wrappers.v,23|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,1|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,2|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,3|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,4|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,5|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,6|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,7|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,8|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,9|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,10|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,11|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,12|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,13|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,14|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,15|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,16|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,17|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,18|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,19|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,20|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,21|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,22|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,23|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,24|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,25|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,26|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,27|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,28|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,29|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,30|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,31|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,32|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,33|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,34|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,35|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,36|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,37|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./lfsr.v,38|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,1|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,2|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,3|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,4|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,5|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,6|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,7|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,8|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,9|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,10|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,11|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,12|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,13|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,14|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,15|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,16|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,17|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,18|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,19|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,20|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,21|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,22|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,23|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,24|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,25|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,26|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,27|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,28|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,29|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,30|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,31|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,32|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,33|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,34|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,35|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,36|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,37|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,38|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,39|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,40|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,41|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,42|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,43|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,44|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,45|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,46|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,47|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,48|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,49|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,50|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,51|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,52|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,53|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,54|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,55|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,56|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,57|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,58|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,59|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,60|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,61|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,62|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,63|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,64|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,65|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,66|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,67|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,68|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,69|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,70|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,71|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,72|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,73|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,74|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,75|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,76|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,77|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,78|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,79|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,80|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,81|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,82|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,83|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,84|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,85|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,86|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,87|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,88|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,89|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,90|0): HDL source line contains one or more control characters.
      *W,CTLCHR (./misr.v,91|0): HDL source line contains one or more control characters.
    Tag: DIFFMN (2)
      *W,DIFFMN (./wrappers.v,3|0): Module name 'lfsrmux' differs from file name 'wrappers.v'.
      *W,DIFFMN (./circuito06_scan_syn.v,6|0): Module name 'circuito06' differs from file name 'circuito06_scan_syn.v'.
    Tag: LCVARN (87)
      *W,LCVARN (./circuito06_scan_syn.v,33|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,35|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,37|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,39|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,41|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,43|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,45|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,47|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,49|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,51|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,53|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,55|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,57|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,58|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,59|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,60|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,61|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,62|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,63|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,64|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,65|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,66|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,68|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,70|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,72|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,74|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,76|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,78|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,80|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,82|0): Module name 'AOI221' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,84|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,85|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,86|0): Module name 'OAI212' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,87|0): Module name 'INV3' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,88|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,89|0): Module name 'AOI211' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,90|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,91|0): Module name 'AOI211' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,92|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,94|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,96|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,98|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,100|0): Module name 'OAI2111' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,101|0): Module name 'AOI2111' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,103|0): Module name 'AOI2111' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,105|0): Module name 'OAI311' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,106|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,108|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,110|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,112|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,114|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,115|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,116|0): Module name 'IMUX21' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,117|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,119|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,121|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,123|0): Module name 'DFSEC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,125|0): Module name 'DFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,127|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,128|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,129|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,130|0): Module name 'IMUX20' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,131|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,132|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,133|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,134|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,135|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,136|0): Module name 'TFSC1' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,138|0): Module name 'NAND31' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,139|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,140|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,141|0): Module name 'NOR31' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,142|0): Module name 'NOR40' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,143|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,144|0): Module name 'INV2' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,145|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,146|0): Module name 'NAND22' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,147|0): Module name 'NOR21' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,148|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,149|0): Module name 'CLKIN2' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,150|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,151|0): Module name 'CLKIN3' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,152|0): Module name 'CLKIN2' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,153|0): Module name 'CLKIN2' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,154|0): Module name 'CLKIN2' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,155|0): Module name 'INV0' uses uppercase characters.
      *W,LCVARN (./circuito06_scan_syn.v,156|0): Module name 'CLKIN2' uses uppercase characters.
    Tag: MAXLEN (2)
      *W,MAXLEN (./controller.v,23|0): The HDL source line is 134 characters, which exceeds the recommended length of 80 characters.
      *W,MAXLEN (./lfsr.v,11|0): The HDL source line is 82 characters, which exceeds the recommended length of 80 characters.
    Tag: NOBLKN (8)
      *W,NOBLKN (./controller.v,35|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./controller.v,47|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./controller.v,73|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./controller.v,92|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./controller.v,104|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./wrappers.v,16|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./lfsr.v,29|0): Each block should be labeled with a meaningful name.
      *W,NOBLKN (./misr.v,68|0): Each block should be labeled with a meaningful name.
    Tag: STYVAL (14)
      *W,STYVAL (./top.v,23|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
      *W,STYVAL (./top.v,32|0): Numeric value '3' used for identifier 'misr_grant_o_w'. Use constants to avoid portability issues.
      *W,STYVAL (./top.v,34|0): Numeric value '3' used for identifier 'lsfr_in_bus_w'. Use constants to avoid portability issues.
      *W,STYVAL (./top.v,35|0): Numeric value '3' used for identifier 'request_bus_w'. Use constants to avoid portability issues.
      *W,STYVAL (./top.v,36|0): Numeric value '3' used for identifier 'input_mux_out_w'. Use constants to avoid portability issues.
      *W,STYVAL (./wrappers.v,11|0): Numeric value '4' used for identifier 'outport'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,10|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,14|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,16|0): Numeric value '2' used for identifier 'coda1'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,17|0): Numeric value '2' used for identifier 'coda2'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,18|0): Numeric value '2' used for identifier 'coda3'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,19|0): Numeric value '2' used for identifier 'coda0'. Use constants to avoid portability issues.
      *W,STYVAL (./circuito06_scan_syn.v,20|0): Numeric value '1' used for identifier 'stato'. Use constants to avoid portability issues.
      *W,STYVAL (./misr.v,17|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
    Tag: UCCONN (17)
      *W,UCCONN (./top.v,2|0): Lowercase characters used for identifier 'misr8_top'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./top.v,6|0): Lowercase characters used for identifier 'misr8_top'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./top.v,11|0): Lowercase characters used for identifier 'misr16_top'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./controller.v,3|0): Lowercase characters used for identifier 'reportval'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./controller.v,19|0): Lowercase characters used for identifier 'reportval'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./controller.v,22|0): Lowercase characters used for identifier 'testval'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./controller.v,18|0): Lowercase characters used for identifier 'IDLE_s'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./controller.v,18|0): Lowercase characters used for identifier 'START_s'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./controller.v,18|0): Lowercase characters used for identifier 'INIT_s'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./controller.v,18|0): Lowercase characters used for identifier 'RUNNING_s'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./controller.v,18|0): Lowercase characters used for identifier 'FINISH_s'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./misr.v,2|0): Lowercase characters used for identifier 'misr8'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./misr.v,6|0): Lowercase characters used for identifier 'misr16'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./misr.v,10|0): Lowercase characters used for identifier 'misr8'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./misr.v,25|0): Lowercase characters used for identifier 'misr16'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./misr.v,60|0): Lowercase characters used for identifier 'misr8'. Use uppercase characters for names of constants and user-defined types.
      *W,UCCONN (./misr.v,65|0): Lowercase characters used for identifier 'seed'. Use uppercase characters for names of constants and user-defined types.
  Category: RTL_FILEFORMAT_VERILOG (0 unique/2 shared/2 total)
    Tag: KEYWOD (2)
      *W,KEYWOD (./wrappers.v,7|0): VHDL reserved word 'in' used as an identifier or label.
      *W,KEYWOD (./lfsr.v,12|0): VHDL reserved word 'out' used as an identifier or label.
  Category: RTL_NAMING_MIXED (0 unique/5 shared/5 total)
    Tag: DIFCLK (3)
      *W,DIFCLK (./top.v,59|0): Clock 'clock' is being renamed to 'clk'.
      *W,DIFCLK (./top.v,76|0): Clock 'clock' is being renamed to 'clk'.
      *W,DIFCLK (./top.v,98|0): Clock 'clock' is being renamed to 'clk'.
    Tag: DIFRST (2)
      *W,DIFRST (./top.v,76|0): Set/Reset 'module_reset_w' is being renamed to 'rst'.
      *W,DIFRST (./top.v,98|0): Set/Reset 'module_reset_w' is being renamed to 'rst'.
  Category: RTL_SIMPERF (0 unique/1 shared/1 total)
    Tag: NBCOMB (1)
      *W,NBCOMB (./controller.v,104|0): Non-blocking assignment encountered in a combinational block.
        *W,NBCOMB (./controller.v,106|0):: Source HDL information for the error/warning mentioned above.
        *W,NBCOMB (./controller.v,109|0):: Source HDL information for the error/warning mentioned above.
  Category: RTL_SIMRACE_VERILOG (0 unique/1 shared/1 total)
    Tag: NBCOMB (1)
      *W,NBCOMB (./controller.v,104|0): Non-blocking assignment encountered in a combinational block.
        *W,NBCOMB (./controller.v,106|0):: Source HDL information for the error/warning mentioned above.
        *W,NBCOMB (./controller.v,109|0):: Source HDL information for the error/warning mentioned above.
  Category: STRUCTURAL (2 unique/1 shared/3 total)
    Tag: ATLGLC (1)
      *W,ATLGLC (./top.v,4|0): Glue logic inferred in top-level module/design-unit 'top'.
        *W,ATLGLC (./top.v,46):: HDL-statement inferred as glue logic.
        *W,ATLGLC (./top.v,48):: HDL-statement inferred as glue logic.
        *W,ATLGLC (./top.v,49):: HDL-statement inferred as glue logic.
        *W,ATLGLC (./top.v,50):: HDL-statement inferred as glue logic.
        *W,ATLGLC (./top.v,51):: HDL-statement inferred as glue logic.
        *W,ATLGLC (./top.v,53):: HDL-statement inferred as glue logic.
        *W,ATLGLC (./top.v,55):: HDL-statement inferred as glue logic.
        *W,ATLGLC (./top.v,56):: HDL-statement inferred as glue logic.
    Tag: DALIAS (1)
      *W,DALIAS (./lfsr.v,24|0): Aliased constructs found. Wires 'scan_out' and 'out[3]' have same drivers.
        *W,DALIAS (./lfsr.v,22):: out[3].
    Tag: SYNASN (1)
      *W,SYNASN (./controller.v,6|0): The module/design-unit 'controller' contains synchronous as well as asynchronous logic.
        *W,SYNASN (./controller.v,102):: One instance/occurence of asynchronous logic at 'top.bist_controller.latch_c'.
        *W,SYNASN (./controller.v,43):: One instance/occurence of synchronous logic at 'top.bist_controller.state'.
Severity: Note (106)
  Category: Unclassified (87)
    Tag: CUVBPD (87)
      *N,CUVBPD (No source,0|0): instance top.main.\coda1_reg[0]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.\coda1_reg[1]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.\coda1_reg[2]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.\coda2_reg[0]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.\coda2_reg[1]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.\coda2_reg[2]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.\coda3_reg[2]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.\coda3_reg[0]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.\coda3_reg[1]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.\coda0_reg[0]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.\coda0_reg[2]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.\coda0_reg[1]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1978 of design unit 'OAI212' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1977 of design unit 'OAI212' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1979 of design unit 'OAI212' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1975 of design unit 'OAI212' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1976 of design unit 'OAI212' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1974 of design unit 'OAI212' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1980 of design unit 'CLKIN3' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1987 of design unit 'CLKIN3' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1988 of design unit 'CLKIN3' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1991 of design unit 'AOI221' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1992 of design unit 'AOI221' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1993 of design unit 'AOI221' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1994 of design unit 'AOI221' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1984 of design unit 'AOI221' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1985 of design unit 'AOI221' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1986 of design unit 'AOI221' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1989 of design unit 'AOI221' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1990 of design unit 'AOI221' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1981 of design unit 'OAI212' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1982 of design unit 'OAI212' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1983 of design unit 'OAI212' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1995 of design unit 'INV3' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2001 of design unit 'CLKIN3' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g1996 of design unit 'AOI211' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2002 of design unit 'NOR31' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2005 of design unit 'AOI211' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.\grant_reg[0]  of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.\grant_reg[1]  of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.\grant_reg[2]  of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.\grant_reg[3]  of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2004 of design unit 'OAI2111' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2003 of design unit 'AOI2111' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2006 of design unit 'AOI2111' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2012 of design unit 'OAI311' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.fu2_reg of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.fu4_reg of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.fu1_reg of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.fu3_reg of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2022 of design unit 'INV2' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2011 of design unit 'NOR31' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2013 of design unit 'IMUX21' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.ru2_reg of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.ru1_reg of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.ru3_reg of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.ru4_reg of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.\stato_reg[1]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2018 of design unit 'NOR21' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2019 of design unit 'NOR21' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2023 of design unit 'NOR31' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2024 of design unit 'IMUX20' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2020 of design unit 'NOR21' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2026 of design unit 'NAND22' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2027 of design unit 'NAND22' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2028 of design unit 'NOR31' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2029 of design unit 'NAND22' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.\stato_reg[0]  of design unit 'TFSC1' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2021 of design unit 'NAND31' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2030 of design unit 'NOR31' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2031 of design unit 'NOR31' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2032 of design unit 'NOR31' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2033 of design unit 'NOR40' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2036 of design unit 'NAND22' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2038 of design unit 'INV2' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2035 of design unit 'NOR21' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2037 of design unit 'NAND22' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2039 of design unit 'NOR21' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2040 of design unit 'CLKIN3' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2042 of design unit 'CLKIN2' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2046 of design unit 'CLKIN3' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2048 of design unit 'CLKIN3' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2045 of design unit 'CLKIN2' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2041 of design unit 'CLKIN2' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2043 of design unit 'CLKIN2' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2044 of design unit 'INV0' is unresolved in 'worklib.circuito06:v'.
      *N,CUVBPD (No source,0|0): instance top.main.g2047 of design unit 'CLKIN2' is unresolved in 'worklib.circuito06:v'.
  Category: DFT (1)
    Tag: CLKINF (1)
      *N,CLKINF (./top.v,16|0): Signal 'top.clock' was inferred as clock.
        *N,CLKINF (./top.v,16):: Clock source is signal 'top.clock'.
        *N,CLKINF (./controller.v,43):: Drives the flip-flop 'top.bist_controller.state'.
  Category: FSM (1)
    Tag: FSMIDN (1)
      *N,FSMIDN (./controller.v,43|0): In module/design-unit 'controller', FSM for state register 'state' has been recognized.
  Category: RTL_CODINGSTYLE_MIXED (1)
    Tag: ALOWID (1)
      *N,ALOWID (./misr.v,72|0): Signal/variable name 'finish' does not follow the active-low naming convention : should end with '_n'.
  Category: RTL_CODINGSTYLE_VERILOG (6)
    Tag: CDNOTE (6)
      *N,CDNOTE (./top.v,1|0): The compiler directive '`timescale' is used in the RTL.
      *N,CDNOTE (./controller.v,1|0): The compiler directive '`timescale' is used in the RTL.
      *N,CDNOTE (./wrappers.v,1|0): The compiler directive '`timescale' is used in the RTL.
      *N,CDNOTE (./lfsr.v,1|0): The compiler directive '`timescale' is used in the RTL.
      *N,CDNOTE (./circuito06_scan_syn.v,1|0): The compiler directive '`timescale' is used in the RTL.
      *N,CDNOTE (./misr.v,1|0): The compiler directive '`timescale' is used in the RTL.
  Category: RTL_FILEFORMAT_MIXED (2)
    Tag: DECLIN (1)
      *N,DECLIN (./circuito06_scan_syn.v,8|0): Use a separate line for each HDL declaration.
    Tag: IDLENG (1)
      *N,IDLENG (./top.v,4|0): Identifier name 'top' is not of appropriate length (4 to 16 characters).
  Category: STRUCTURAL (8)
    Tag: INFNOT (1)
      *N,INFNOT (./controller.v,85|0): Ignoring flipflop 'ncounter' with no fanout to module/design-unit outputs or child instances.
    Tag: NUMDFF (1)
      *N,NUMDFF (./top.v,4|0): Number of single-bit D flip-flops present in the hierarchy is 17.
    Tag: PRTCNT (6)
      *N,PRTCNT (./top.v,4|0): Module/Entity 'top' contains '11' ports.
        *N,PRTCNT (./top.v,4):: Number of Input ports: 7.
        *N,PRTCNT (./top.v,4):: Number of Output ports: 4.
      *N,PRTCNT (./controller.v,6|0): Module/Entity 'controller' contains '8' ports.
        *N,PRTCNT (./controller.v,6):: Number of Input ports: 3.
        *N,PRTCNT (./controller.v,6):: Number of Output ports: 5.
      *N,PRTCNT (./wrappers.v,3|0): Module/Entity 'lfsrmux' contains '4' ports.
        *N,PRTCNT (./wrappers.v,3):: Number of Input ports: 3.
        *N,PRTCNT (./wrappers.v,3):: Number of Output ports: 1.
      *N,PRTCNT (./lfsr.v,3|0): Module/Entity 'lfsr' contains '5' ports.
        *N,PRTCNT (./lfsr.v,3):: Number of Input ports: 3.
        *N,PRTCNT (./lfsr.v,3):: Number of Output ports: 2.
      *N,PRTCNT (./circuito06_scan_syn.v,6|0): Module/Entity 'circuito06' contains '10' ports.
        *N,PRTCNT (./circuito06_scan_syn.v,6):: Number of Input ports: 8.
        *N,PRTCNT (./circuito06_scan_syn.v,6):: Number of Output ports: 2.
      *N,PRTCNT (./misr.v,4|0): Module/Entity 'misr' contains '7' ports.
        *N,PRTCNT (./misr.v,4):: Number of Input ports: 5.
        *N,PRTCNT (./misr.v,4):: Number of Output ports: 2.
