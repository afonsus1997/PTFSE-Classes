Report Generated by TOOL:	xmbrowse	19.03-s013
Date: Tue May 19 10:45:45 PM WEST 2020
Directory: /afs/.ist.utl.pt/users/7/9/ist426079/PTFSE/P2
Open Log Files: hal.log
Current Filters: None
Total: Errors: 6  Warnings: 739  Notes: 107  Suppressed: None
Snapshot: worklib.top:v
---------------------------------------------------------


Severity: Error (10)
  Category: FSM (2)
    Tag: TERMST (1)
      Tool: halsynth (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *E,TERMST (./controller.v,45|0): In module/design-unit 'controller', FSM for state register 'state' has terminal states 3.
              *E,TERMST (./controller.v,50|0):: Source HDL information for the error/warning mentioned above.
    Tag: UNRCHS (1)
      Tool: halsynth (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *E,UNRCHS (./controller.v,45|0): In module/design-unit 'controller', FSM for state register 'state' has unreachable states 4.
              *E,UNRCHS (./controller.v,55|0):: Source HDL information for the error/warning mentioned above.
  Category: RMM (0 unique/4 shared/4 total)
    Tag: VERCAS (4)
      Tool: halcheck (4)
        File: ./controller.v (4)
          Logfile: hal.log (4)
            *E,VERCAS (./controller.v,19|0): Identifier, label, instance, or module name 'START' reused with a case difference.
              *E,VERCAS (./controller.v,9):: Previously used as 'start'.
            *E,VERCAS (./controller.v,19|0): Identifier, label, instance, or module name 'INIT' reused with a case difference.
              *E,VERCAS (./controller.v,10):: Previously used as 'init'.
            *E,VERCAS (./controller.v,19|0): Identifier, label, instance, or module name 'RUNNING' reused with a case difference.
              *E,VERCAS (./controller.v,12):: Previously used as 'running'.
            *E,VERCAS (./controller.v,19|0): Identifier, label, instance, or module name 'FINISH' reused with a case difference.
              *E,VERCAS (./controller.v,13):: Previously used as 'finish'.
  Category: RTL_FILEFORMAT_MIXED (0 unique/4 shared/4 total)
    Tag: VERCAS (4)
      Tool: halcheck (4)
        File: ./controller.v (4)
          Logfile: hal.log (4)
            *E,VERCAS (./controller.v,19|0): Identifier, label, instance, or module name 'START' reused with a case difference.
              *E,VERCAS (./controller.v,9):: Previously used as 'start'.
            *E,VERCAS (./controller.v,19|0): Identifier, label, instance, or module name 'INIT' reused with a case difference.
              *E,VERCAS (./controller.v,10):: Previously used as 'init'.
            *E,VERCAS (./controller.v,19|0): Identifier, label, instance, or module name 'RUNNING' reused with a case difference.
              *E,VERCAS (./controller.v,12):: Previously used as 'running'.
            *E,VERCAS (./controller.v,19|0): Identifier, label, instance, or module name 'FINISH' reused with a case difference.
              *E,VERCAS (./controller.v,13):: Previously used as 'finish'.
Severity: Warning (888)
  Category: Unclassified (1)
    Tag: CUVWSP (1)
      Tool: xmelab (1)
        File: ./top.v (1)
          Logfile: hal.log (1)
            *W,CUVWSP (./top.v,42|29): 2 output ports were not connected:
              *W,CUVWSP (./controller.v,10):: init
              *W,CUVWSP (./controller.v,13):: finish
  Category: ALL_TOOL (88)
    Tag: PRTSNP (1)
      Tool: hal (1)
        File: No source (1)
          Logfile: hal.log (1)
            *W,PRTSNP (No source,0|0): Design is partially elaborated. Connectivity information may not be complete.
    Tag: UNCINW (87)
      Tool: halsynth (87)
        File: ./circuito06_scan_syn.v (87)
          Logfile: hal.log (87)
            *W,UNCINW (./circuito06_scan_syn.v,33|0): Component instance is not fully bound (coda1_reg[0]).
            *W,UNCINW (./circuito06_scan_syn.v,35|0): Component instance is not fully bound (coda1_reg[1]).
            *W,UNCINW (./circuito06_scan_syn.v,37|0): Component instance is not fully bound (coda1_reg[2]).
            *W,UNCINW (./circuito06_scan_syn.v,39|0): Component instance is not fully bound (coda2_reg[0]).
            *W,UNCINW (./circuito06_scan_syn.v,41|0): Component instance is not fully bound (coda2_reg[1]).
            *W,UNCINW (./circuito06_scan_syn.v,43|0): Component instance is not fully bound (coda2_reg[2]).
            *W,UNCINW (./circuito06_scan_syn.v,45|0): Component instance is not fully bound (coda3_reg[2]).
            *W,UNCINW (./circuito06_scan_syn.v,47|0): Component instance is not fully bound (coda3_reg[0]).
            *W,UNCINW (./circuito06_scan_syn.v,49|0): Component instance is not fully bound (coda3_reg[1]).
            *W,UNCINW (./circuito06_scan_syn.v,51|0): Component instance is not fully bound (coda0_reg[0]).
            *W,UNCINW (./circuito06_scan_syn.v,53|0): Component instance is not fully bound (coda0_reg[2]).
            *W,UNCINW (./circuito06_scan_syn.v,55|0): Component instance is not fully bound (coda0_reg[1]).
            *W,UNCINW (./circuito06_scan_syn.v,57|0): Component instance is not fully bound (g1978).
            *W,UNCINW (./circuito06_scan_syn.v,58|0): Component instance is not fully bound (g1977).
            *W,UNCINW (./circuito06_scan_syn.v,59|0): Component instance is not fully bound (g1979).
            *W,UNCINW (./circuito06_scan_syn.v,60|0): Component instance is not fully bound (g1975).
            *W,UNCINW (./circuito06_scan_syn.v,61|0): Component instance is not fully bound (g1976).
            *W,UNCINW (./circuito06_scan_syn.v,62|0): Component instance is not fully bound (g1974).
            *W,UNCINW (./circuito06_scan_syn.v,63|0): Component instance is not fully bound (g1980).
            *W,UNCINW (./circuito06_scan_syn.v,64|0): Component instance is not fully bound (g1987).
            *W,UNCINW (./circuito06_scan_syn.v,65|0): Component instance is not fully bound (g1988).
            *W,UNCINW (./circuito06_scan_syn.v,66|0): Component instance is not fully bound (g1991).
            *W,UNCINW (./circuito06_scan_syn.v,68|0): Component instance is not fully bound (g1992).
            *W,UNCINW (./circuito06_scan_syn.v,70|0): Component instance is not fully bound (g1993).
            *W,UNCINW (./circuito06_scan_syn.v,72|0): Component instance is not fully bound (g1994).
            *W,UNCINW (./circuito06_scan_syn.v,74|0): Component instance is not fully bound (g1984).
            *W,UNCINW (./circuito06_scan_syn.v,76|0): Component instance is not fully bound (g1985).
            *W,UNCINW (./circuito06_scan_syn.v,78|0): Component instance is not fully bound (g1986).
            *W,UNCINW (./circuito06_scan_syn.v,80|0): Component instance is not fully bound (g1989).
            *W,UNCINW (./circuito06_scan_syn.v,82|0): Component instance is not fully bound (g1990).
            *W,UNCINW (./circuito06_scan_syn.v,84|0): Component instance is not fully bound (g1981).
            *W,UNCINW (./circuito06_scan_syn.v,85|0): Component instance is not fully bound (g1982).
            *W,UNCINW (./circuito06_scan_syn.v,86|0): Component instance is not fully bound (g1983).
            *W,UNCINW (./circuito06_scan_syn.v,87|0): Component instance is not fully bound (g1995).
            *W,UNCINW (./circuito06_scan_syn.v,88|0): Component instance is not fully bound (g2001).
            *W,UNCINW (./circuito06_scan_syn.v,89|0): Component instance is not fully bound (g1996).
            *W,UNCINW (./circuito06_scan_syn.v,90|0): Component instance is not fully bound (g2002).
            *W,UNCINW (./circuito06_scan_syn.v,91|0): Component instance is not fully bound (g2005).
            *W,UNCINW (./circuito06_scan_syn.v,92|0): Component instance is not fully bound (grant_reg[0]).
            *W,UNCINW (./circuito06_scan_syn.v,94|0): Component instance is not fully bound (grant_reg[1]).
            *W,UNCINW (./circuito06_scan_syn.v,96|0): Component instance is not fully bound (grant_reg[2]).
            *W,UNCINW (./circuito06_scan_syn.v,98|0): Component instance is not fully bound (grant_reg[3]).
            *W,UNCINW (./circuito06_scan_syn.v,100|0): Component instance is not fully bound (g2004).
            *W,UNCINW (./circuito06_scan_syn.v,101|0): Component instance is not fully bound (g2003).
            *W,UNCINW (./circuito06_scan_syn.v,103|0): Component instance is not fully bound (g2006).
            *W,UNCINW (./circuito06_scan_syn.v,105|0): Component instance is not fully bound (g2012).
            *W,UNCINW (./circuito06_scan_syn.v,106|0): Component instance is not fully bound (fu2_reg).
            *W,UNCINW (./circuito06_scan_syn.v,108|0): Component instance is not fully bound (fu4_reg).
            *W,UNCINW (./circuito06_scan_syn.v,110|0): Component instance is not fully bound (fu1_reg).
            *W,UNCINW (./circuito06_scan_syn.v,112|0): Component instance is not fully bound (fu3_reg).
            *W,UNCINW (./circuito06_scan_syn.v,114|0): Component instance is not fully bound (g2022).
            *W,UNCINW (./circuito06_scan_syn.v,115|0): Component instance is not fully bound (g2011).
            *W,UNCINW (./circuito06_scan_syn.v,116|0): Component instance is not fully bound (g2013).
            *W,UNCINW (./circuito06_scan_syn.v,117|0): Component instance is not fully bound (ru2_reg).
            *W,UNCINW (./circuito06_scan_syn.v,119|0): Component instance is not fully bound (ru1_reg).
            *W,UNCINW (./circuito06_scan_syn.v,121|0): Component instance is not fully bound (ru3_reg).
            *W,UNCINW (./circuito06_scan_syn.v,123|0): Component instance is not fully bound (ru4_reg).
            *W,UNCINW (./circuito06_scan_syn.v,125|0): Component instance is not fully bound (stato_reg[1]).
            *W,UNCINW (./circuito06_scan_syn.v,127|0): Component instance is not fully bound (g2018).
            *W,UNCINW (./circuito06_scan_syn.v,128|0): Component instance is not fully bound (g2019).
            *W,UNCINW (./circuito06_scan_syn.v,129|0): Component instance is not fully bound (g2023).
            *W,UNCINW (./circuito06_scan_syn.v,130|0): Component instance is not fully bound (g2024).
            *W,UNCINW (./circuito06_scan_syn.v,131|0): Component instance is not fully bound (g2020).
            *W,UNCINW (./circuito06_scan_syn.v,132|0): Component instance is not fully bound (g2026).
            *W,UNCINW (./circuito06_scan_syn.v,133|0): Component instance is not fully bound (g2027).
            *W,UNCINW (./circuito06_scan_syn.v,134|0): Component instance is not fully bound (g2028).
            *W,UNCINW (./circuito06_scan_syn.v,135|0): Component instance is not fully bound (g2029).
            *W,UNCINW (./circuito06_scan_syn.v,136|0): Component instance is not fully bound (stato_reg[0]).
            *W,UNCINW (./circuito06_scan_syn.v,138|0): Component instance is not fully bound (g2021).
            *W,UNCINW (./circuito06_scan_syn.v,139|0): Component instance is not fully bound (g2030).
            *W,UNCINW (./circuito06_scan_syn.v,140|0): Component instance is not fully bound (g2031).
            *W,UNCINW (./circuito06_scan_syn.v,141|0): Component instance is not fully bound (g2032).
            *W,UNCINW (./circuito06_scan_syn.v,142|0): Component instance is not fully bound (g2033).
            *W,UNCINW (./circuito06_scan_syn.v,143|0): Component instance is not fully bound (g2036).
            *W,UNCINW (./circuito06_scan_syn.v,144|0): Component instance is not fully bound (g2038).
            *W,UNCINW (./circuito06_scan_syn.v,145|0): Component instance is not fully bound (g2035).
            *W,UNCINW (./circuito06_scan_syn.v,146|0): Component instance is not fully bound (g2037).
            *W,UNCINW (./circuito06_scan_syn.v,147|0): Component instance is not fully bound (g2039).
            *W,UNCINW (./circuito06_scan_syn.v,148|0): Component instance is not fully bound (g2040).
            *W,UNCINW (./circuito06_scan_syn.v,149|0): Component instance is not fully bound (g2042).
            *W,UNCINW (./circuito06_scan_syn.v,150|0): Component instance is not fully bound (g2046).
            *W,UNCINW (./circuito06_scan_syn.v,151|0): Component instance is not fully bound (g2048).
            *W,UNCINW (./circuito06_scan_syn.v,152|0): Component instance is not fully bound (g2045).
            *W,UNCINW (./circuito06_scan_syn.v,153|0): Component instance is not fully bound (g2041).
            *W,UNCINW (./circuito06_scan_syn.v,154|0): Component instance is not fully bound (g2043).
            *W,UNCINW (./circuito06_scan_syn.v,155|0): Component instance is not fully bound (g2044).
            *W,UNCINW (./circuito06_scan_syn.v,156|0): Component instance is not fully bound (g2047).
  Category: DFT (16 unique/3 shared/19 total)
    Tag: CLKDAT (1)
      Tool: halstruct (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,CLKDAT (./controller.v,40|0): Clock signal 'bist_start' drives the data pin of flip-flop 'top.bist_controller.state'.
    Tag: FFCSTD (1)
      Tool: halstruct (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,FFCSTD (./controller.v,103|0): Inferred flip-flop 'reset_latch' has a constant data input.
    Tag: FFWASR (12)
      Tool: halstruct (12)
        File: ./controller.v (4)
          Logfile: hal.log (4)
            *W,FFWASR (./controller.v,40|0): Flip-flop 'state' does not have any asynchronous set or reset.
            *W,FFWASR (./controller.v,75|0): Flip-flop 'toggle_r' does not have any asynchronous set or reset.
            *W,FFWASR (./controller.v,91|0): Flip-flop 'bist_end' does not have any asynchronous set or reset.
            *W,FFWASR (./controller.v,103|0): Flip-flop 'reset_latch' does not have any asynchronous set or reset.
        File: ./misr.v (8)
          Logfile: hal.log (8)
            *W,FFWASR (./misr.v,23|0): Flip-flop 'dff[0]' does not have any asynchronous set or reset.
            *W,FFWASR (./misr.v,24|0): Flip-flop 'dff[1]' does not have any asynchronous set or reset.
            *W,FFWASR (./misr.v,25|0): Flip-flop 'dff[2]' does not have any asynchronous set or reset.
            *W,FFWASR (./misr.v,26|0): Flip-flop 'dff[3]' does not have any asynchronous set or reset.
            *W,FFWASR (./misr.v,27|0): Flip-flop 'dff[4]' does not have any asynchronous set or reset.
            *W,FFWASR (./misr.v,28|0): Flip-flop 'dff[5]' does not have any asynchronous set or reset.
            *W,FFWASR (./misr.v,29|0): Flip-flop 'dff[6]' does not have any asynchronous set or reset.
            *W,FFWASR (./misr.v,30|0): Flip-flop 'dff[7]' does not have any asynchronous set or reset.
    Tag: FFWNSR (2)
      Tool: halstruct (2)
        File: ./lfsr.v (2)
          Logfile: hal.log (2)
            *W,FFWNSR (./lfsr.v,31|0): Flip-flop 'dff[0]' does not have any set or reset.
            *W,FFWNSR (./lfsr.v,31|0): Flip-flop 'dff[3:1]' does not have any set or reset.
    Tag: MULMCK (1)
      Tool: halstruct (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,MULMCK (./controller.v,103|0): Multiple master clocks found. Clock 'start' for flip-flop 'top.bist_controller.reset_latch' is derived from master input 'bist_start' while the previously detected clocks were derived from 'clock' for flip-flop 'top.bist_controller.state'.
    Tag: TPOUNR (2)
      Tool: halstruct (2)
        File: ./top.v (2)
          Logfile: hal.log (2)
            *W,TPOUNR (./top.v,37|0): Output 'grant_o' of top-level module is not a register.
            *W,TPOUNR (./top.v,39|0): Output 'pass_fail' of top-level module is not a register.
  Category: FSM (3)
    Tag: BADFSM (1)
      Tool: halsynth (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,BADFSM (./controller.v,32|0): In module/design-unit 'controller', FSM for state register 'state' does not adhere to modeling style guidelines.
              *W,BADFSM (./controller.v,32|0):: Source HDL information for the error/warning mentioned above.
              *W,BADFSM (./controller.v,44|0):: Source HDL information for the error/warning mentioned above.
              *W,BADFSM (./controller.v,68|0):: Source HDL information for the error/warning mentioned above.
              *W,BADFSM (./controller.v,87|0):: Source HDL information for the error/warning mentioned above.
              *W,BADFSM (./controller.v,62|0):: Source HDL information for the error/warning mentioned above.
              *W,BADFSM (./controller.v,63|0):: Source HDL information for the error/warning mentioned above.
              *W,BADFSM (./controller.v,64|0):: Source HDL information for the error/warning mentioned above.
              *W,BADFSM (./controller.v,66|0):: Source HDL information for the error/warning mentioned above.
    Tag: EXTFSM (1)
      Tool: halsynth (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,EXTFSM (./controller.v,6|0): Extraneous logic present in module/design-unit 'controller' that encodes an FSM.
    Tag: TRNMBT (1)
      Tool: halsynth (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,TRNMBT (./controller.v,46|0): For the specified state '1', the state value changes by more than one bits on transition to state(s): 2.
              *W,TRNMBT (./controller.v,47|0):: Source HDL information for the error/warning mentioned above.
  Category: HDLICE_NOSUPP (0 unique/1 shared/1 total)
    Tag: MULWIR (1)
      Tool: halsynth (1)
        File: ./top.v (1)
          Logfile: hal.log (1)
            *W,MULWIR (./top.v,16|0): Module 'top' has wire 'pass_fail' multi-driven.
              *W,MULWIR (./top.v,39|0):: Source HDL information for the error/warning mentioned above.
  Category: RMM (0 unique/130 shared/130 total)
    Tag: ATLGLC (1)
      Tool: halstruct (1)
        File: ./top.v (1)
          Logfile: hal.log (1)
            *W,ATLGLC (./top.v,2|0): Glue logic inferred in top-level module/design-unit 'top'.
              *W,ATLGLC (./top.v,32):: HDL-statement inferred as glue logic.
              *W,ATLGLC (./top.v,33):: HDL-statement inferred as glue logic.
              *W,ATLGLC (./top.v,34):: HDL-statement inferred as glue logic.
              *W,ATLGLC (./top.v,35):: HDL-statement inferred as glue logic.
              *W,ATLGLC (./top.v,37):: HDL-statement inferred as glue logic.
              *W,ATLGLC (./top.v,40):: HDL-statement inferred as glue logic.
              *W,ATLGLC (./top.v,39):: HDL-statement inferred as glue logic.
    Tag: DIFCLK (4)
      Tool: halstruct (4)
        File: ./top.v (4)
          Logfile: hal.log (4)
            *W,DIFCLK (./top.v,42|0): Clock 'clock' is being renamed to 'clk'.
            *W,DIFCLK (./top.v,42|0): Clock 'bist_start' is being renamed to 'start'.
            *W,DIFCLK (./top.v,59|0): Clock 'clock' is being renamed to 'clk'.
            *W,DIFCLK (./top.v,81|0): Clock 'clock' is being renamed to 'clk'.
    Tag: DIFFMN (2)
      Tool: halcheck (2)
        File: ./circuito06_scan_syn.v (1)
          Logfile: hal.log (1)
            *W,DIFFMN (./circuito06_scan_syn.v,6|0): Module name 'circuito06' differs from file name 'circuito06_scan_syn.v'.
        File: ./wrappers.v (1)
          Logfile: hal.log (1)
            *W,DIFFMN (./wrappers.v,3|0): Module name 'lfsrmux' differs from file name 'wrappers.v'.
    Tag: DIFRST (1)
      Tool: halstruct (1)
        File: ./top.v (1)
          Logfile: hal.log (1)
            *W,DIFRST (./top.v,81|0): Set/Reset 'reset' is being renamed to 'rst'.
    Tag: KEYWOD (2)
      Tool: halcheck (2)
        File: ./lfsr.v (1)
          Logfile: hal.log (1)
            *W,KEYWOD (./lfsr.v,11|0): VHDL reserved word 'out' used as an identifier or label.
        File: ./wrappers.v (1)
          Logfile: hal.log (1)
            *W,KEYWOD (./wrappers.v,7|0): VHDL reserved word 'in' used as an identifier or label.
    Tag: LCVARN (87)
      Tool: halcheck (87)
        File: ./circuito06_scan_syn.v (87)
          Logfile: hal.log (87)
            *W,LCVARN (./circuito06_scan_syn.v,33|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,35|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,37|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,39|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,41|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,43|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,45|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,47|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,49|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,51|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,53|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,55|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,57|0): Module name 'OAI212' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,58|0): Module name 'OAI212' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,59|0): Module name 'OAI212' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,60|0): Module name 'OAI212' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,61|0): Module name 'OAI212' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,62|0): Module name 'OAI212' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,63|0): Module name 'CLKIN3' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,64|0): Module name 'CLKIN3' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,65|0): Module name 'CLKIN3' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,66|0): Module name 'AOI221' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,68|0): Module name 'AOI221' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,70|0): Module name 'AOI221' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,72|0): Module name 'AOI221' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,74|0): Module name 'AOI221' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,76|0): Module name 'AOI221' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,78|0): Module name 'AOI221' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,80|0): Module name 'AOI221' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,82|0): Module name 'AOI221' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,84|0): Module name 'OAI212' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,85|0): Module name 'OAI212' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,86|0): Module name 'OAI212' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,87|0): Module name 'INV3' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,88|0): Module name 'CLKIN3' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,89|0): Module name 'AOI211' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,90|0): Module name 'NOR31' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,91|0): Module name 'AOI211' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,92|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,94|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,96|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,98|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,100|0): Module name 'OAI2111' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,101|0): Module name 'AOI2111' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,103|0): Module name 'AOI2111' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,105|0): Module name 'OAI311' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,106|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,108|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,110|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,112|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,114|0): Module name 'INV2' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,115|0): Module name 'NOR31' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,116|0): Module name 'IMUX21' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,117|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,119|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,121|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,123|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,125|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,127|0): Module name 'NOR21' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,128|0): Module name 'NOR21' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,129|0): Module name 'NOR31' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,130|0): Module name 'IMUX20' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,131|0): Module name 'NOR21' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,132|0): Module name 'NAND22' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,133|0): Module name 'NAND22' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,134|0): Module name 'NOR31' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,135|0): Module name 'NAND22' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,136|0): Module name 'TFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,138|0): Module name 'NAND31' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,139|0): Module name 'NOR31' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,140|0): Module name 'NOR31' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,141|0): Module name 'NOR31' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,142|0): Module name 'NOR40' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,143|0): Module name 'NAND22' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,144|0): Module name 'INV2' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,145|0): Module name 'NOR21' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,146|0): Module name 'NAND22' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,147|0): Module name 'NOR21' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,148|0): Module name 'CLKIN3' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,149|0): Module name 'CLKIN2' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,150|0): Module name 'CLKIN3' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,151|0): Module name 'CLKIN3' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,152|0): Module name 'CLKIN2' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,153|0): Module name 'CLKIN2' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,154|0): Module name 'CLKIN2' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,155|0): Module name 'INV0' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,156|0): Module name 'CLKIN2' uses uppercase characters.
    Tag: MULMCK (1)
      Tool: halstruct (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,MULMCK (./controller.v,103|0): Multiple master clocks found. Clock 'start' for flip-flop 'top.bist_controller.reset_latch' is derived from master input 'bist_start' while the previously detected clocks were derived from 'clock' for flip-flop 'top.bist_controller.state'.
    Tag: NOBLKN (8)
      Tool: halcheck (8)
        File: ./controller.v (5)
          Logfile: hal.log (5)
            *W,NOBLKN (./controller.v,32|0): Each block should be labeled with a meaningful name.
            *W,NOBLKN (./controller.v,44|0): Each block should be labeled with a meaningful name.
            *W,NOBLKN (./controller.v,68|0): Each block should be labeled with a meaningful name.
            *W,NOBLKN (./controller.v,87|0): Each block should be labeled with a meaningful name.
            *W,NOBLKN (./controller.v,98|0): Each block should be labeled with a meaningful name.
        File: ./lfsr.v (1)
          Logfile: hal.log (1)
            *W,NOBLKN (./lfsr.v,26|0): Each block should be labeled with a meaningful name.
        File: ./misr.v (1)
          Logfile: hal.log (1)
            *W,NOBLKN (./misr.v,18|0): Each block should be labeled with a meaningful name.
        File: ./wrappers.v (1)
          Logfile: hal.log (1)
            *W,NOBLKN (./wrappers.v,15|0): Each block should be labeled with a meaningful name.
    Tag: STYVAL (18)
      Tool: halcheck (18)
        File: ./circuito06_scan_syn.v (7)
          Logfile: hal.log (7)
            *W,STYVAL (./circuito06_scan_syn.v,10|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
            *W,STYVAL (./circuito06_scan_syn.v,14|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
            *W,STYVAL (./circuito06_scan_syn.v,16|0): Numeric value '2' used for identifier 'coda1'. Use constants to avoid portability issues.
            *W,STYVAL (./circuito06_scan_syn.v,17|0): Numeric value '2' used for identifier 'coda2'. Use constants to avoid portability issues.
            *W,STYVAL (./circuito06_scan_syn.v,18|0): Numeric value '2' used for identifier 'coda3'. Use constants to avoid portability issues.
            *W,STYVAL (./circuito06_scan_syn.v,19|0): Numeric value '2' used for identifier 'coda0'. Use constants to avoid portability issues.
            *W,STYVAL (./circuito06_scan_syn.v,20|0): Numeric value '1' used for identifier 'stato'. Use constants to avoid portability issues.
        File: ./lfsr.v (2)
          Logfile: hal.log (2)
            *W,STYVAL (./lfsr.v,10|0): Numeric value '3' used for identifier 'seed'. Use constants to avoid portability issues.
            *W,STYVAL (./lfsr.v,11|0): Numeric value '3' used for identifier 'out'. Use constants to avoid portability issues.
        File: ./misr.v (1)
          Logfile: hal.log (1)
            *W,STYVAL (./misr.v,9|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
        File: ./top.v (8)
          Logfile: hal.log (8)
            *W,STYVAL (./top.v,10|0): Numeric value '3' used for identifier 'lfsr_seed'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,11|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,15|0): Numeric value '7' used for identifier 'signature_out'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,20|0): Numeric value '3' used for identifier 'misr_grant_o_w'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,22|0): Numeric value '3' used for identifier 'lsfr_in_bus_w'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,23|0): Numeric value '3' used for identifier 'request_bus_w'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,24|0): Numeric value '3' used for identifier 'input_mux_out_w'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,30|0): Numeric value '7' used for identifier 'signature_w'. Use constants to avoid portability issues.
    Tag: TPOUNR (2)
      Tool: halstruct (2)
        File: ./top.v (2)
          Logfile: hal.log (2)
            *W,TPOUNR (./top.v,37|0): Output 'grant_o' of top-level module is not a register.
            *W,TPOUNR (./top.v,39|0): Output 'pass_fail' of top-level module is not a register.
    Tag: UCCONN (4)
      Tool: halcheck (4)
        File: ./controller.v (3)
          Logfile: hal.log (3)
            *W,UCCONN (./controller.v,3|0): Lowercase characters used for identifier 'reportval'. Use uppercase characters for names of constants and user-defined types.
            *W,UCCONN (./controller.v,20|0): Lowercase characters used for identifier 'reportval'. Use uppercase characters for names of constants and user-defined types.
            *W,UCCONN (./controller.v,23|0): Lowercase characters used for identifier 'testval'. Use uppercase characters for names of constants and user-defined types.
        File: ./misr.v (1)
          Logfile: hal.log (1)
            *W,UCCONN (./misr.v,4|0): Lowercase characters used for identifier 'seed'. Use uppercase characters for names of constants and user-defined types.
  Category: RTL_CODINGSTYLE_MIXED (58 unique/18 shared/76 total)
    Tag: CLKUCL (2)
      Tool: halstruct (2)
        File: ./top.v (2)
          Logfile: hal.log (2)
            *W,CLKUCL (./top.v,2|0): The clock 'top.bist_start' drives a combinational logic. Depth '1' exceeded at 'top.bist_controller.latch_c'.
            *W,CLKUCL (./top.v,2|0): The clock 'top.bist_start' drives a combinational logic. Depth '1' exceeded at 'top.bist_controller.complete_c'.
    Tag: CNSTCN (2)
      Tool: halsynth (2)
        File: ./controller.v (2)
          Logfile: hal.log (2)
            *W,CNSTCN (./controller.v,51|0): Conditional expression is statically evaluated to false.
            *W,CNSTCN (./controller.v,74|0): Conditional expression is statically evaluated to true.
    Tag: INTTOB (6)
      Tool: halcheck (6)
        File: ./controller.v (6)
          Logfile: hal.log (6)
            *W,INTTOB (./controller.v,70|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit bist_controller.
            *W,INTTOB (./controller.v,78|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit bist_controller.
            *W,INTTOB (./controller.v,89|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit bist_controller.
            *W,INTTOB (./controller.v,91|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit bist_controller.
            *W,INTTOB (./controller.v,100|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit bist_controller.
            *W,INTTOB (./controller.v,103|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit bist_controller.
    Tag: NUMSUF (4)
      Tool: halcheck (4)
        File: ./circuito06_scan_syn.v (4)
          Logfile: hal.log (4)
            *W,NUMSUF (./circuito06_scan_syn.v,16|0): Identifier 'coda1' has a numeric value suffix.
            *W,NUMSUF (./circuito06_scan_syn.v,17|0): Identifier 'coda2' has a numeric value suffix.
            *W,NUMSUF (./circuito06_scan_syn.v,18|0): Identifier 'coda3' has a numeric value suffix.
            *W,NUMSUF (./circuito06_scan_syn.v,19|0): Identifier 'coda0' has a numeric value suffix.
    Tag: OUTINP (1)
      Tool: halsynth (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,OUTINP (./controller.v,15|0): Primary output port pass_fail of module controller may be driven outside the module.This port will be treated as an inout port.
    Tag: POIASG (1)
      Tool: halcheck (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,POIASG (./controller.v,80|0): The result of addition operation may lead to a potential overflow in module/design-unit bist_controller.
              *W,POIASG (./controller.v,80):: LHS operand 'ncounter' is 11 bit(s), RHS operand 'ncounter + 1' is 32 bit(s).
              *W,POIASG (./controller.v,80):: Increase the size of LHS by 21 bit(s).
    Tag: STYVAL (18)
      Tool: halcheck (18)
        File: ./circuito06_scan_syn.v (7)
          Logfile: hal.log (7)
            *W,STYVAL (./circuito06_scan_syn.v,10|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
            *W,STYVAL (./circuito06_scan_syn.v,14|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
            *W,STYVAL (./circuito06_scan_syn.v,16|0): Numeric value '2' used for identifier 'coda1'. Use constants to avoid portability issues.
            *W,STYVAL (./circuito06_scan_syn.v,17|0): Numeric value '2' used for identifier 'coda2'. Use constants to avoid portability issues.
            *W,STYVAL (./circuito06_scan_syn.v,18|0): Numeric value '2' used for identifier 'coda3'. Use constants to avoid portability issues.
            *W,STYVAL (./circuito06_scan_syn.v,19|0): Numeric value '2' used for identifier 'coda0'. Use constants to avoid portability issues.
            *W,STYVAL (./circuito06_scan_syn.v,20|0): Numeric value '1' used for identifier 'stato'. Use constants to avoid portability issues.
        File: ./lfsr.v (2)
          Logfile: hal.log (2)
            *W,STYVAL (./lfsr.v,10|0): Numeric value '3' used for identifier 'seed'. Use constants to avoid portability issues.
            *W,STYVAL (./lfsr.v,11|0): Numeric value '3' used for identifier 'out'. Use constants to avoid portability issues.
        File: ./misr.v (1)
          Logfile: hal.log (1)
            *W,STYVAL (./misr.v,9|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
        File: ./top.v (8)
          Logfile: hal.log (8)
            *W,STYVAL (./top.v,10|0): Numeric value '3' used for identifier 'lfsr_seed'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,11|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,15|0): Numeric value '7' used for identifier 'signature_out'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,20|0): Numeric value '3' used for identifier 'misr_grant_o_w'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,22|0): Numeric value '3' used for identifier 'lsfr_in_bus_w'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,23|0): Numeric value '3' used for identifier 'request_bus_w'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,24|0): Numeric value '3' used for identifier 'input_mux_out_w'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,30|0): Numeric value '7' used for identifier 'signature_w'. Use constants to avoid portability issues.
    Tag: SYNPRT (5)
      Tool: halstruct (5)
        File: ./controller.v (4)
          Logfile: hal.log (4)
            *W,SYNPRT (./controller.v,62|0): Output port 'init' is assigned asynchronously.
            *W,SYNPRT (./controller.v,66|0): Output port 'toggle' is assigned asynchronously.
            *W,SYNPRT (./controller.v,63|0): Output port 'running' is assigned asynchronously.
            *W,SYNPRT (./controller.v,64|0): Output port 'finish' is assigned asynchronously.
        File: ./wrappers.v (1)
          Logfile: hal.log (1)
            *W,SYNPRT (./wrappers.v,19|0): Output port 'outport' is assigned asynchronously.
    Tag: TRUNCZ (15)
      Tool: halcheck (15)
        File: ./controller.v (15)
          Logfile: hal.log (15)
            *W,TRUNCZ (./controller.v,34|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
            *W,TRUNCZ (./controller.v,37|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
            *W,TRUNCZ (./controller.v,47|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
            *W,TRUNCZ (./controller.v,49|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
            *W,TRUNCZ (./controller.v,52|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
            *W,TRUNCZ (./controller.v,54|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
            *W,TRUNCZ (./controller.v,56|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
            *W,TRUNCZ (./controller.v,58|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
            *W,TRUNCZ (./controller.v,70|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
            *W,TRUNCZ (./controller.v,71|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
            *W,TRUNCZ (./controller.v,78|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
            *W,TRUNCZ (./controller.v,89|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
            *W,TRUNCZ (./controller.v,91|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
            *W,TRUNCZ (./controller.v,100|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
            *W,TRUNCZ (./controller.v,103|0): Truncation in constant conversion without a loss of bits in module/design-unit bist_controller.
    Tag: UELCIT (4)
      Tool: halcheck (4)
        File: ./controller.v (4)
          Logfile: hal.log (4)
            *W,UELCIT (./controller.v,46|0): Unequal length in case item comparison (selector is 3 bits, case tag expression is 32 bits) in module/design-unit bist_controller.
            *W,UELCIT (./controller.v,48|0): Unequal length in case item comparison (selector is 3 bits, case tag expression is 32 bits) in module/design-unit bist_controller.
            *W,UELCIT (./controller.v,50|0): Unequal length in case item comparison (selector is 3 bits, case tag expression is 32 bits) in module/design-unit bist_controller.
            *W,UELCIT (./controller.v,55|0): Unequal length in case item comparison (selector is 3 bits, case tag expression is 32 bits) in module/design-unit bist_controller.
    Tag: UELOPR (1)
      Tool: halcheck (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,UELOPR (./controller.v,80|0): Unequal length operand in bit/arithmetic operator PLUS in module/design-unit bist_controller.
              *W,UELOPR (./controller.v,80):: LHS operand 'ncounter' is 11 bits, RHS operand '1' is 32 bits.
    Tag: ULCMPE (9)
      Tool: halcheck (9)
        File: ./controller.v (9)
          Logfile: hal.log (9)
            *W,ULCMPE (./controller.v,36|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit bist_controller. LHS operand is 3 bits, RHS operand is 32 bits.
            *W,ULCMPE (./controller.v,51|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit bist_controller. LHS operand is 11 bits, RHS operand is 32 bits.
            *W,ULCMPE (./controller.v,69|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit bist_controller. LHS operand is 3 bits, RHS operand is 32 bits.
            *W,ULCMPE (./controller.v,73|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit bist_controller. LHS operand is 3 bits, RHS operand is 32 bits.
            *W,ULCMPE (./controller.v,90|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit bist_controller. LHS operand is 3 bits, RHS operand is 32 bits.
            *W,ULCMPE (./controller.v,62|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit bist_controller. LHS operand is 3 bits, RHS operand is 32 bits.
            *W,ULCMPE (./controller.v,63|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit bist_controller. LHS operand is 3 bits, RHS operand is 32 bits.
            *W,ULCMPE (./controller.v,64|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit bist_controller. LHS operand is 3 bits, RHS operand is 32 bits.
            *W,ULCMPE (./controller.v,66|0): Unequal length operands in equality operator encountered (padding produces incorrect result) in module/design-unit bist_controller. LHS operand is 3 bits, RHS operand is 32 bits.
    Tag: ULRELE (2)
      Tool: halcheck (2)
        File: ./controller.v (2)
          Logfile: hal.log (2)
            *W,ULRELE (./controller.v,74|0): Unequal length operands in relational operator (padding produces incorrect result) in module/design-unit bist_controller -- LHS operand is 11 bits, RHS operand is 32 bits.
            *W,ULRELE (./controller.v,63|0): Unequal length operands in relational operator (padding produces incorrect result) in module/design-unit bist_controller -- LHS operand is 11 bits, RHS operand is 32 bits.
    Tag: UNCONN (2)
      Tool: halcheck (2)
        File: ./top.v (2)
          Logfile: hal.log (2)
            *W,UNCONN (./top.v,42|0): Output port 'init' defined in design-unit 'controller' is not connected in its instance 'bist_controller'.
            *W,UNCONN (./top.v,42|0): Output port 'finish' defined in design-unit 'controller' is not connected in its instance 'bist_controller'.
    Tag: UNCONO (2)
      Tool: halstruct (2)
        File: ./top.v (2)
          Logfile: hal.log (2)
            *W,UNCONO (./top.v,42|0): Port 'init' (which is being used as an output) of entity/module 'controller' is being driven inside the design, but not connected (either partially or completely) in its instance 'top.bist_controller'.
            *W,UNCONO (./top.v,42|0): Port 'finish' (which is being used as an output) of entity/module 'controller' is being driven inside the design, but not connected (either partially or completely) in its instance 'top.bist_controller'.
    Tag: UNDRIV (2)
      Tool: halsynth (2)
        File: ./circuito06_scan_syn.v (2)
          Logfile: hal.log (2)
            *W,UNDRIV (./circuito06_scan_syn.v,14|0): Primary output/inout 'grant_o'  is not driven in the module 'circuito06'.
            *W,UNDRIV (./circuito06_scan_syn.v,15|0): Primary output/inout 'scan_out'  is not driven in the module 'circuito06'.
  Category: RTL_CODINGSTYLE_VERILOG (145)
    Tag: CDWARN (5)
      Tool: halcheck (5)
        File: ./controller.v (5)
          Logfile: hal.log (5)
            *W,CDWARN (./controller.v,3|0): The compiler directive '`define' is used in the RTL.
            *W,CDWARN (./controller.v,20|0): The compiler directive '`ifdef' is used in the RTL.
            *W,CDWARN (./controller.v,22|0): The compiler directive '`endif' is used in the RTL.
            *W,CDWARN (./controller.v,23|0): The compiler directive '`ifdef' is used in the RTL.
            *W,CDWARN (./controller.v,25|0): The compiler directive '`endif' is used in the RTL.
    Tag: IFDDEF (1)
      Tool: halcheck (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,IFDDEF (./controller.v,3|0): Macro '`ifdef reportval' is defined using `define statement in the same verilog file.
    Tag: IMPDTC (15)
      Tool: halcheck (15)
        File: ./controller.v (15)
          Logfile: hal.log (15)
            *W,IMPDTC (./controller.v,34|0): Expression 'IDLE' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
            *W,IMPDTC (./controller.v,37|0): Expression 'START' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
            *W,IMPDTC (./controller.v,47|0): Expression 'INIT' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
            *W,IMPDTC (./controller.v,49|0): Expression 'RUNNING' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
            *W,IMPDTC (./controller.v,52|0): Expression 'FINISH' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
            *W,IMPDTC (./controller.v,54|0): Expression 'RUNNING' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
            *W,IMPDTC (./controller.v,56|0): Expression 'IDLE' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
            *W,IMPDTC (./controller.v,58|0): Expression 'IDLE' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
            *W,IMPDTC (./controller.v,70|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
            *W,IMPDTC (./controller.v,71|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
            *W,IMPDTC (./controller.v,78|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
            *W,IMPDTC (./controller.v,89|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
            *W,IMPDTC (./controller.v,91|0): Expression '1' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
            *W,IMPDTC (./controller.v,100|0): Expression '1' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
            *W,IMPDTC (./controller.v,103|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit bist_controller.
    Tag: IMPTYP (1)
      Tool: halcheck (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,IMPTYP (./controller.v,80|0): Expression 'ncounter + 1' implicitly converted to type 'register' from type 'integer'.
    Tag: LOGAND (1)
      Tool: halcheck (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,LOGAND (./controller.v,36|0): Bit-wise AND in a conditional expression. Logical AND may have been intended.
    Tag: LOGORP (1)
      Tool: halcheck (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,LOGORP (./controller.v,69|0): Bit-wise OR in a conditional expression. Logical OR may have been intended.
    Tag: LRGOPR (4)
      Tool: halcheck (4)
        File: ./controller.v (4)
          Logfile: hal.log (4)
            *W,LRGOPR (./controller.v,51|0): Arithmetic or relational operation performed on large operands in module/design-unit bist_controller.
            *W,LRGOPR (./controller.v,74|0): Arithmetic or relational operation performed on large operands in module/design-unit bist_controller.
            *W,LRGOPR (./controller.v,80|0): Arithmetic or relational operation performed on large operands in module/design-unit bist_controller.
            *W,LRGOPR (./controller.v,63|0): Arithmetic or relational operation performed on large operands in module/design-unit bist_controller.
    Tag: MULOPR (1)
      Tool: halcheck (1)
        File: ./top.v (1)
          Logfile: hal.log (1)
            *W,MULOPR (./top.v,39|0): Logical AND operator applied to multi-bit operand 'signature_w' and 'SIGNATURE_VALID' in module/design-unit top.
    Tag: NBGEND (5)
      Tool: halcheck (5)
        File: ./controller.v (4)
          Logfile: hal.log (4)
            *W,NBGEND (./controller.v,39|0): Missing begin/end statement in the 'else' block.
            *W,NBGEND (./controller.v,51|0): Missing begin/end statement in the 'if' block.
            *W,NBGEND (./controller.v,88|0): Missing begin/end statement in the 'if' block.
            *W,NBGEND (./controller.v,90|0): Missing begin/end statement in the 'if' block.
        File: ./wrappers.v (1)
          Logfile: hal.log (1)
            *W,NBGEND (./wrappers.v,16|0): Missing begin/end statement in the 'if' block.
    Tag: PRMBSE (1)
      Tool: halcheck (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,PRMBSE (./controller.v,21|0): Base not specified for parameter 'NCLOCK'.
    Tag: PRMVAL (9)
      Tool: halcheck (9)
        File: ./controller.v (6)
          Logfile: hal.log (6)
            *W,PRMVAL (./controller.v,19|0): Bit width not specified for parameter 'IDLE'.
            *W,PRMVAL (./controller.v,19|0): Bit width not specified for parameter 'START'.
            *W,PRMVAL (./controller.v,19|0): Bit width not specified for parameter 'INIT'.
            *W,PRMVAL (./controller.v,19|0): Bit width not specified for parameter 'RUNNING'.
            *W,PRMVAL (./controller.v,19|0): Bit width not specified for parameter 'FINISH'.
            *W,PRMVAL (./controller.v,21|0): Bit width not specified for parameter 'NCLOCK'.
        File: ./lfsr.v (1)
          Logfile: hal.log (1)
            *W,PRMVAL (./lfsr.v,4|0): Bit width not specified for parameter 'NBIT'.
        File: ./misr.v (1)
          Logfile: hal.log (1)
            *W,PRMVAL (./misr.v,3|0): Bit width not specified for parameter 'NBIT'.
        File: ./wrappers.v (1)
          Logfile: hal.log (1)
            *W,PRMVAL (./wrappers.v,5|0): Bit width not specified for parameter 'NBIT'.
    Tag: UASWIR (99)
      Tool: halcheck (99)
        File: ./circuito06_scan_syn.v (99)
          Logfile: hal.log (99)
            *W,UASWIR (./circuito06_scan_syn.v,16|0): Wire 'coda1' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,17|0): Wire 'coda2' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,18|0): Wire 'coda3' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,19|0): Wire 'coda0' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,20|0): Wire 'stato' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,21|0): Wire 'fu1' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,21|0): Wire 'fu2' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,21|0): Wire 'fu3' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,21|0): Wire 'fu4' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,21|0): Wire 'n_0' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,21|0): Wire 'n_4' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,21|0): Wire 'n_6' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,21|0): Wire 'n_8' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,22|0): Wire 'n_10' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,22|0): Wire 'n_12' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,22|0): Wire 'n_14' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,22|0): Wire 'n_16' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,22|0): Wire 'n_18' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,22|0): Wire 'n_20' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,22|0): Wire 'n_22' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,22|0): Wire 'n_24' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,23|0): Wire 'n_26' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,23|0): Wire 'n_28' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,23|0): Wire 'n_30' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,23|0): Wire 'n_32' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,23|0): Wire 'n_34' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,23|0): Wire 'n_36' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,23|0): Wire 'n_38' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,23|0): Wire 'n_40' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,24|0): Wire 'n_42' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,24|0): Wire 'n_44' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,24|0): Wire 'n_46' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,24|0): Wire 'n_48' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,24|0): Wire 'n_50' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,24|0): Wire 'n_52' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,24|0): Wire 'n_53' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,24|0): Wire 'n_54' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,25|0): Wire 'n_55' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,25|0): Wire 'n_56' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,25|0): Wire 'n_57' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,25|0): Wire 'n_58' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,25|0): Wire 'n_59' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,25|0): Wire 'n_60' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,25|0): Wire 'n_61' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,25|0): Wire 'n_62' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,26|0): Wire 'n_63' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,26|0): Wire 'n_64' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,26|0): Wire 'n_65' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,26|0): Wire 'n_66' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,26|0): Wire 'n_67' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,26|0): Wire 'n_68' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,26|0): Wire 'n_69' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,26|0): Wire 'n_70' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,27|0): Wire 'n_71' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,27|0): Wire 'n_72' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,27|0): Wire 'n_73' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,27|0): Wire 'n_74' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,27|0): Wire 'n_75' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,27|0): Wire 'n_76' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,27|0): Wire 'n_77' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,27|0): Wire 'n_78' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,28|0): Wire 'n_79' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,28|0): Wire 'n_80' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,28|0): Wire 'n_81' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,28|0): Wire 'n_82' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,28|0): Wire 'n_83' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,28|0): Wire 'n_84' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,28|0): Wire 'n_85' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,28|0): Wire 'n_86' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,29|0): Wire 'n_87' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,29|0): Wire 'n_88' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,29|0): Wire 'n_89' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,29|0): Wire 'n_90' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,29|0): Wire 'n_91' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,29|0): Wire 'n_92' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,29|0): Wire 'n_93' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,29|0): Wire 'n_94' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,30|0): Wire 'n_95' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,30|0): Wire 'n_96' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,30|0): Wire 'n_97' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,30|0): Wire 'n_98' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,30|0): Wire 'n_99' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,30|0): Wire 'n_100' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,30|0): Wire 'n_101' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,30|0): Wire 'n_102' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,31|0): Wire 'n_103' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,31|0): Wire 'n_104' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,31|0): Wire 'n_105' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,31|0): Wire 'n_106' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,31|0): Wire 'n_107' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,31|0): Wire 'n_108' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,31|0): Wire 'n_109' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,31|0): Wire 'n_110' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,32|0): Wire 'n_111' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,32|0): Wire 'n_112' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,32|0): Wire 'ru1' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,32|0): Wire 'ru2' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,32|0): Wire 'ru3' defined in module 'circuito06' is unassigned, but drives at least an object.
            *W,UASWIR (./circuito06_scan_syn.v,32|0): Wire 'ru4' defined in module 'circuito06' is unassigned, but drives at least an object.
    Tag: URAREG (1)
      Tool: halcheck (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,URAREG (./controller.v,28|0): Local register variable 'complete' defined in module 'controller' is unused (neither read nor assigned).
    Tag: USEMAC (1)
      Tool: halcheck (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,USEMAC (./controller.v,3|0): Macro 'reportval' is unused.
  Category: RTL_FILEFORMAT_MIXED (294 unique/119 shared/413 total)
    Tag: CTLCHR (291)
      Tool: halcheck (291)
        File: ./controller.v (108)
          Logfile: hal.log (108)
            *W,CTLCHR (./controller.v,1|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,2|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,3|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,4|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,5|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,6|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,7|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,8|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,9|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,10|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,11|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,12|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,13|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,14|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,15|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,16|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,17|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,18|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,19|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,20|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,21|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,22|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,23|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,24|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,25|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,26|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,27|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,28|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,29|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,30|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,31|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,32|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,33|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,34|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,35|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,36|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,37|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,38|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,39|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,40|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,41|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,42|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,43|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,44|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,45|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,46|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,47|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,48|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,49|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,50|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,51|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,52|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,53|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,54|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,55|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,56|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,57|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,58|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,59|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,60|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,61|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,62|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,63|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,64|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,65|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,66|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,67|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,68|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,69|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,70|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,71|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,72|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,73|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,74|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,75|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,76|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,77|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,78|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,79|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,80|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,81|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,82|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,83|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,84|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,85|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,86|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,87|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,88|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,89|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,90|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,91|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,92|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,93|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,94|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,95|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,96|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,97|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,98|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,99|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,100|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,101|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,102|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,103|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,104|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,105|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,106|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,107|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./controller.v,108|0): HDL source line contains one or more control characters.
        File: ./lfsr.v (35)
          Logfile: hal.log (35)
            *W,CTLCHR (./lfsr.v,1|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,2|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,3|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,4|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,5|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,6|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,7|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,8|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,9|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,10|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,11|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,12|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,13|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,14|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,15|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,16|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,17|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,18|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,19|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,20|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,21|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,22|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,23|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,24|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,25|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,26|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,27|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,28|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,29|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,30|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,31|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,32|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,33|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,34|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./lfsr.v,35|0): HDL source line contains one or more control characters.
        File: ./misr.v (34)
          Logfile: hal.log (34)
            *W,CTLCHR (./misr.v,1|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,2|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,3|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,4|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,5|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,6|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,7|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,8|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,9|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,10|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,11|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,12|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,13|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,14|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,15|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,16|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,17|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,18|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,19|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,20|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,21|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,22|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,23|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,24|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,25|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,26|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,27|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,28|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,29|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,30|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,31|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,32|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,33|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./misr.v,34|0): HDL source line contains one or more control characters.
        File: ./top.v (91)
          Logfile: hal.log (91)
            *W,CTLCHR (./top.v,1|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,2|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,3|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,4|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,5|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,6|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,7|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,8|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,9|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,10|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,11|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,12|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,13|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,14|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,15|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,16|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,17|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,18|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,19|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,20|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,21|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,22|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,23|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,24|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,25|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,26|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,27|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,28|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,29|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,30|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,31|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,32|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,33|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,34|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,35|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,36|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,37|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,38|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,39|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,40|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,41|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,42|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,43|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,44|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,45|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,46|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,47|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,48|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,49|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,50|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,51|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,52|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,53|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,54|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,55|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,56|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,57|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,58|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,59|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,60|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,61|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,62|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,63|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,64|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,65|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,66|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,67|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,68|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,69|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,70|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,71|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,72|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,73|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,74|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,75|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,76|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,77|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,78|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,79|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,80|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,81|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,82|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,83|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,84|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,85|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,86|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,87|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,88|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,89|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,90|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./top.v,91|0): HDL source line contains one or more control characters.
        File: ./wrappers.v (23)
          Logfile: hal.log (23)
            *W,CTLCHR (./wrappers.v,1|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,2|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,3|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,4|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,5|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,6|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,7|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,8|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,9|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,10|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,11|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,12|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,13|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,14|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,15|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,16|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,17|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,18|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,19|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,20|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,21|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,22|0): HDL source line contains one or more control characters.
            *W,CTLCHR (./wrappers.v,23|0): HDL source line contains one or more control characters.
    Tag: DIFFMN (2)
      Tool: halcheck (2)
        File: ./circuito06_scan_syn.v (1)
          Logfile: hal.log (1)
            *W,DIFFMN (./circuito06_scan_syn.v,6|0): Module name 'circuito06' differs from file name 'circuito06_scan_syn.v'.
        File: ./wrappers.v (1)
          Logfile: hal.log (1)
            *W,DIFFMN (./wrappers.v,3|0): Module name 'lfsrmux' differs from file name 'wrappers.v'.
    Tag: LCVARN (87)
      Tool: halcheck (87)
        File: ./circuito06_scan_syn.v (87)
          Logfile: hal.log (87)
            *W,LCVARN (./circuito06_scan_syn.v,33|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,35|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,37|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,39|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,41|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,43|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,45|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,47|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,49|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,51|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,53|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,55|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,57|0): Module name 'OAI212' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,58|0): Module name 'OAI212' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,59|0): Module name 'OAI212' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,60|0): Module name 'OAI212' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,61|0): Module name 'OAI212' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,62|0): Module name 'OAI212' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,63|0): Module name 'CLKIN3' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,64|0): Module name 'CLKIN3' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,65|0): Module name 'CLKIN3' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,66|0): Module name 'AOI221' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,68|0): Module name 'AOI221' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,70|0): Module name 'AOI221' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,72|0): Module name 'AOI221' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,74|0): Module name 'AOI221' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,76|0): Module name 'AOI221' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,78|0): Module name 'AOI221' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,80|0): Module name 'AOI221' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,82|0): Module name 'AOI221' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,84|0): Module name 'OAI212' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,85|0): Module name 'OAI212' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,86|0): Module name 'OAI212' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,87|0): Module name 'INV3' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,88|0): Module name 'CLKIN3' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,89|0): Module name 'AOI211' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,90|0): Module name 'NOR31' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,91|0): Module name 'AOI211' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,92|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,94|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,96|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,98|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,100|0): Module name 'OAI2111' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,101|0): Module name 'AOI2111' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,103|0): Module name 'AOI2111' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,105|0): Module name 'OAI311' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,106|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,108|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,110|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,112|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,114|0): Module name 'INV2' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,115|0): Module name 'NOR31' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,116|0): Module name 'IMUX21' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,117|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,119|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,121|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,123|0): Module name 'DFSEC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,125|0): Module name 'DFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,127|0): Module name 'NOR21' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,128|0): Module name 'NOR21' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,129|0): Module name 'NOR31' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,130|0): Module name 'IMUX20' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,131|0): Module name 'NOR21' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,132|0): Module name 'NAND22' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,133|0): Module name 'NAND22' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,134|0): Module name 'NOR31' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,135|0): Module name 'NAND22' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,136|0): Module name 'TFSC1' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,138|0): Module name 'NAND31' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,139|0): Module name 'NOR31' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,140|0): Module name 'NOR31' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,141|0): Module name 'NOR31' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,142|0): Module name 'NOR40' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,143|0): Module name 'NAND22' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,144|0): Module name 'INV2' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,145|0): Module name 'NOR21' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,146|0): Module name 'NAND22' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,147|0): Module name 'NOR21' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,148|0): Module name 'CLKIN3' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,149|0): Module name 'CLKIN2' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,150|0): Module name 'CLKIN3' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,151|0): Module name 'CLKIN3' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,152|0): Module name 'CLKIN2' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,153|0): Module name 'CLKIN2' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,154|0): Module name 'CLKIN2' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,155|0): Module name 'INV0' uses uppercase characters.
            *W,LCVARN (./circuito06_scan_syn.v,156|0): Module name 'CLKIN2' uses uppercase characters.
    Tag: MAXLEN (3)
      Tool: halcheck (3)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,MAXLEN (./controller.v,24|0): The HDL source line is 134 characters, which exceeds the recommended length of 80 characters.
        File: ./misr.v (1)
          Logfile: hal.log (1)
            *W,MAXLEN (./misr.v,1|0): The HDL source line is 81 characters, which exceeds the recommended length of 80 characters.
        File: ./top.v (1)
          Logfile: hal.log (1)
            *W,MAXLEN (./top.v,2|0): The HDL source line is 134 characters, which exceeds the recommended length of 80 characters.
    Tag: NOBLKN (8)
      Tool: halcheck (8)
        File: ./controller.v (5)
          Logfile: hal.log (5)
            *W,NOBLKN (./controller.v,32|0): Each block should be labeled with a meaningful name.
            *W,NOBLKN (./controller.v,44|0): Each block should be labeled with a meaningful name.
            *W,NOBLKN (./controller.v,68|0): Each block should be labeled with a meaningful name.
            *W,NOBLKN (./controller.v,87|0): Each block should be labeled with a meaningful name.
            *W,NOBLKN (./controller.v,98|0): Each block should be labeled with a meaningful name.
        File: ./lfsr.v (1)
          Logfile: hal.log (1)
            *W,NOBLKN (./lfsr.v,26|0): Each block should be labeled with a meaningful name.
        File: ./misr.v (1)
          Logfile: hal.log (1)
            *W,NOBLKN (./misr.v,18|0): Each block should be labeled with a meaningful name.
        File: ./wrappers.v (1)
          Logfile: hal.log (1)
            *W,NOBLKN (./wrappers.v,15|0): Each block should be labeled with a meaningful name.
    Tag: STYVAL (18)
      Tool: halcheck (18)
        File: ./circuito06_scan_syn.v (7)
          Logfile: hal.log (7)
            *W,STYVAL (./circuito06_scan_syn.v,10|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
            *W,STYVAL (./circuito06_scan_syn.v,14|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
            *W,STYVAL (./circuito06_scan_syn.v,16|0): Numeric value '2' used for identifier 'coda1'. Use constants to avoid portability issues.
            *W,STYVAL (./circuito06_scan_syn.v,17|0): Numeric value '2' used for identifier 'coda2'. Use constants to avoid portability issues.
            *W,STYVAL (./circuito06_scan_syn.v,18|0): Numeric value '2' used for identifier 'coda3'. Use constants to avoid portability issues.
            *W,STYVAL (./circuito06_scan_syn.v,19|0): Numeric value '2' used for identifier 'coda0'. Use constants to avoid portability issues.
            *W,STYVAL (./circuito06_scan_syn.v,20|0): Numeric value '1' used for identifier 'stato'. Use constants to avoid portability issues.
        File: ./lfsr.v (2)
          Logfile: hal.log (2)
            *W,STYVAL (./lfsr.v,10|0): Numeric value '3' used for identifier 'seed'. Use constants to avoid portability issues.
            *W,STYVAL (./lfsr.v,11|0): Numeric value '3' used for identifier 'out'. Use constants to avoid portability issues.
        File: ./misr.v (1)
          Logfile: hal.log (1)
            *W,STYVAL (./misr.v,9|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
        File: ./top.v (8)
          Logfile: hal.log (8)
            *W,STYVAL (./top.v,10|0): Numeric value '3' used for identifier 'lfsr_seed'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,11|0): Numeric value '3' used for identifier 'grant_o'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,15|0): Numeric value '7' used for identifier 'signature_out'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,20|0): Numeric value '3' used for identifier 'misr_grant_o_w'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,22|0): Numeric value '3' used for identifier 'lsfr_in_bus_w'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,23|0): Numeric value '3' used for identifier 'request_bus_w'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,24|0): Numeric value '3' used for identifier 'input_mux_out_w'. Use constants to avoid portability issues.
            *W,STYVAL (./top.v,30|0): Numeric value '7' used for identifier 'signature_w'. Use constants to avoid portability issues.
    Tag: UCCONN (4)
      Tool: halcheck (4)
        File: ./controller.v (3)
          Logfile: hal.log (3)
            *W,UCCONN (./controller.v,3|0): Lowercase characters used for identifier 'reportval'. Use uppercase characters for names of constants and user-defined types.
            *W,UCCONN (./controller.v,20|0): Lowercase characters used for identifier 'reportval'. Use uppercase characters for names of constants and user-defined types.
            *W,UCCONN (./controller.v,23|0): Lowercase characters used for identifier 'testval'. Use uppercase characters for names of constants and user-defined types.
        File: ./misr.v (1)
          Logfile: hal.log (1)
            *W,UCCONN (./misr.v,4|0): Lowercase characters used for identifier 'seed'. Use uppercase characters for names of constants and user-defined types.
  Category: RTL_FILEFORMAT_VERILOG (0 unique/2 shared/2 total)
    Tag: KEYWOD (2)
      Tool: halcheck (2)
        File: ./lfsr.v (1)
          Logfile: hal.log (1)
            *W,KEYWOD (./lfsr.v,11|0): VHDL reserved word 'out' used as an identifier or label.
        File: ./wrappers.v (1)
          Logfile: hal.log (1)
            *W,KEYWOD (./wrappers.v,7|0): VHDL reserved word 'in' used as an identifier or label.
  Category: RTL_NAMING_MIXED (0 unique/5 shared/5 total)
    Tag: DIFCLK (4)
      Tool: halstruct (4)
        File: ./top.v (4)
          Logfile: hal.log (4)
            *W,DIFCLK (./top.v,42|0): Clock 'clock' is being renamed to 'clk'.
            *W,DIFCLK (./top.v,42|0): Clock 'bist_start' is being renamed to 'start'.
            *W,DIFCLK (./top.v,59|0): Clock 'clock' is being renamed to 'clk'.
            *W,DIFCLK (./top.v,81|0): Clock 'clock' is being renamed to 'clk'.
    Tag: DIFRST (1)
      Tool: halstruct (1)
        File: ./top.v (1)
          Logfile: hal.log (1)
            *W,DIFRST (./top.v,81|0): Set/Reset 'reset' is being renamed to 'rst'.
  Category: RTL_SYNTH_VERILOG (0 unique/1 shared/1 total)
    Tag: MULWIR (1)
      Tool: halsynth (1)
        File: ./top.v (1)
          Logfile: hal.log (1)
            *W,MULWIR (./top.v,16|0): Module 'top' has wire 'pass_fail' multi-driven.
              *W,MULWIR (./top.v,39|0):: Source HDL information for the error/warning mentioned above.
  Category: STRUCTURAL (3 unique/1 shared/4 total)
    Tag: ATLGLC (1)
      Tool: halstruct (1)
        File: ./top.v (1)
          Logfile: hal.log (1)
            *W,ATLGLC (./top.v,2|0): Glue logic inferred in top-level module/design-unit 'top'.
              *W,ATLGLC (./top.v,32):: HDL-statement inferred as glue logic.
              *W,ATLGLC (./top.v,33):: HDL-statement inferred as glue logic.
              *W,ATLGLC (./top.v,34):: HDL-statement inferred as glue logic.
              *W,ATLGLC (./top.v,35):: HDL-statement inferred as glue logic.
              *W,ATLGLC (./top.v,37):: HDL-statement inferred as glue logic.
              *W,ATLGLC (./top.v,40):: HDL-statement inferred as glue logic.
              *W,ATLGLC (./top.v,39):: HDL-statement inferred as glue logic.
    Tag: DALIAS (1)
      Tool: halstruct (1)
        File: ./lfsr.v (1)
          Logfile: hal.log (1)
            *W,DALIAS (./lfsr.v,21|0): Aliased constructs found. Wires 'scan_out' and 'out[3]' have same drivers.
              *W,DALIAS (./lfsr.v,19):: out[3].
    Tag: MCKDMN (1)
      Tool: halstruct (1)
        File: ./top.v (1)
          Logfile: hal.log (1)
            *W,MCKDMN (./top.v,42|0): In instance 'bist_controller', clocks belong to different clock domains.
              *W,MCKDMN (./controller.v,9):: Clock 'start' belongs to domain 'top.bist_start'.
              *W,MCKDMN (./controller.v,7):: Clock 'clk' belongs to domain 'top.clock'.
    Tag: SYNASN (1)
      Tool: halstruct (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *W,SYNASN (./controller.v,6|0): The module/design-unit 'controller' contains synchronous as well as asynchronous logic.
              *W,SYNASN (./controller.v,96):: One instance/occurence of asynchronous logic at 'top.bist_controller.latch_c'.
              *W,SYNASN (./controller.v,40):: One instance/occurence of synchronous logic at 'top.bist_controller.state'.
Severity: Note (107)
  Category: Unclassified (87)
    Tag: CUVBPD (87)
      Tool: xmelab (87)
        File: No source (87)
          Logfile: hal.log (87)
            *N,CUVBPD (No source,0|0): instance top.uut.\coda1_reg[0]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.\coda1_reg[1]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.\coda1_reg[2]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.\coda2_reg[0]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.\coda2_reg[1]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.\coda2_reg[2]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.\coda3_reg[2]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.\coda3_reg[0]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.\coda3_reg[1]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.\coda0_reg[0]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.\coda0_reg[2]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.\coda0_reg[1]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1978 of design unit 'OAI212' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1977 of design unit 'OAI212' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1979 of design unit 'OAI212' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1975 of design unit 'OAI212' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1976 of design unit 'OAI212' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1974 of design unit 'OAI212' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1980 of design unit 'CLKIN3' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1987 of design unit 'CLKIN3' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1988 of design unit 'CLKIN3' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1991 of design unit 'AOI221' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1992 of design unit 'AOI221' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1993 of design unit 'AOI221' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1994 of design unit 'AOI221' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1984 of design unit 'AOI221' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1985 of design unit 'AOI221' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1986 of design unit 'AOI221' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1989 of design unit 'AOI221' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1990 of design unit 'AOI221' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1981 of design unit 'OAI212' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1982 of design unit 'OAI212' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1983 of design unit 'OAI212' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1995 of design unit 'INV3' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2001 of design unit 'CLKIN3' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g1996 of design unit 'AOI211' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2002 of design unit 'NOR31' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2005 of design unit 'AOI211' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.\grant_reg[0]  of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.\grant_reg[1]  of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.\grant_reg[2]  of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.\grant_reg[3]  of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2004 of design unit 'OAI2111' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2003 of design unit 'AOI2111' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2006 of design unit 'AOI2111' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2012 of design unit 'OAI311' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.fu2_reg of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.fu4_reg of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.fu1_reg of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.fu3_reg of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2022 of design unit 'INV2' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2011 of design unit 'NOR31' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2013 of design unit 'IMUX21' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.ru2_reg of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.ru1_reg of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.ru3_reg of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.ru4_reg of design unit 'DFSEC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.\stato_reg[1]  of design unit 'DFSC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2018 of design unit 'NOR21' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2019 of design unit 'NOR21' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2023 of design unit 'NOR31' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2024 of design unit 'IMUX20' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2020 of design unit 'NOR21' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2026 of design unit 'NAND22' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2027 of design unit 'NAND22' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2028 of design unit 'NOR31' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2029 of design unit 'NAND22' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.\stato_reg[0]  of design unit 'TFSC1' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2021 of design unit 'NAND31' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2030 of design unit 'NOR31' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2031 of design unit 'NOR31' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2032 of design unit 'NOR31' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2033 of design unit 'NOR40' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2036 of design unit 'NAND22' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2038 of design unit 'INV2' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2035 of design unit 'NOR21' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2037 of design unit 'NAND22' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2039 of design unit 'NOR21' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2040 of design unit 'CLKIN3' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2042 of design unit 'CLKIN2' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2046 of design unit 'CLKIN3' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2048 of design unit 'CLKIN3' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2045 of design unit 'CLKIN2' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2041 of design unit 'CLKIN2' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2043 of design unit 'CLKIN2' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2044 of design unit 'INV0' is unresolved in 'worklib.circuito06:v'.
            *N,CUVBPD (No source,0|0): instance top.uut.g2047 of design unit 'CLKIN2' is unresolved in 'worklib.circuito06:v'.
  Category: DFT (2)
    Tag: CLKINF (2)
      Tool: halstruct (2)
        File: ./top.v (2)
          Logfile: hal.log (2)
            *N,CLKINF (./top.v,4|0): Signal 'top.clock' was inferred as clock.
              *N,CLKINF (./top.v,4):: Clock source is signal 'top.clock'.
              *N,CLKINF (./controller.v,40):: Drives the flip-flop 'top.bist_controller.state'.
            *N,CLKINF (./top.v,13|0): Signal 'top.bist_start' was inferred as clock.
              *N,CLKINF (./top.v,13):: Clock source is signal 'top.bist_start'.
              *N,CLKINF (./controller.v,103):: Drives the flip-flop 'top.bist_controller.reset_latch'.
  Category: FSM (1)
    Tag: FSMIDN (1)
      Tool: halsynth (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *N,FSMIDN (./controller.v,40|0): In module/design-unit 'controller', FSM for state register 'state' has been recognized.
  Category: RTL_CODINGSTYLE_VERILOG (6)
    Tag: CDNOTE (6)
      Tool: halcheck (6)
        File: ./circuito06_scan_syn.v (1)
          Logfile: hal.log (1)
            *N,CDNOTE (./circuito06_scan_syn.v,1|0): The compiler directive '`timescale' is used in the RTL.
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *N,CDNOTE (./controller.v,1|0): The compiler directive '`timescale' is used in the RTL.
        File: ./lfsr.v (1)
          Logfile: hal.log (1)
            *N,CDNOTE (./lfsr.v,1|0): The compiler directive '`timescale' is used in the RTL.
        File: ./misr.v (1)
          Logfile: hal.log (1)
            *N,CDNOTE (./misr.v,1|0): The compiler directive '`timescale' is used in the RTL.
        File: ./top.v (1)
          Logfile: hal.log (1)
            *N,CDNOTE (./top.v,1|0): The compiler directive '`timescale' is used in the RTL.
        File: ./wrappers.v (1)
          Logfile: hal.log (1)
            *N,CDNOTE (./wrappers.v,1|0): The compiler directive '`timescale' is used in the RTL.
  Category: RTL_FILEFORMAT_MIXED (3)
    Tag: DECLIN (1)
      Tool: halcheck (1)
        File: ./circuito06_scan_syn.v (1)
          Logfile: hal.log (1)
            *N,DECLIN (./circuito06_scan_syn.v,8|0): Use a separate line for each HDL declaration.
    Tag: IDLENG (2)
      Tool: halcheck (2)
        File: ./top.v (2)
          Logfile: hal.log (2)
            *N,IDLENG (./top.v,2|0): Identifier name 'top' is not of appropriate length (4 to 16 characters).
            *N,IDLENG (./top.v,68|0): Identifier name 'uut' is not of appropriate length (4 to 16 characters).
  Category: STRUCTURAL (8)
    Tag: INFNOT (1)
      Tool: halstruct (1)
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *N,INFNOT (./controller.v,80|0): Ignoring flipflop 'ncounter' with no fanout to module/design-unit outputs or child instances.
    Tag: NUMDFF (1)
      Tool: halstruct (1)
        File: ./top.v (1)
          Logfile: hal.log (1)
            *N,NUMDFF (./top.v,2|0): Number of single-bit D flip-flops present in the hierarchy is 18.
    Tag: PRTCNT (6)
      Tool: halcheck (6)
        File: ./circuito06_scan_syn.v (1)
          Logfile: hal.log (1)
            *N,PRTCNT (./circuito06_scan_syn.v,6|0): Module/Entity 'circuito06' contains '10' ports.
              *N,PRTCNT (./circuito06_scan_syn.v,6):: Number of Input ports: 8.
              *N,PRTCNT (./circuito06_scan_syn.v,6):: Number of Output ports: 2.
        File: ./controller.v (1)
          Logfile: hal.log (1)
            *N,PRTCNT (./controller.v,6|0): Module/Entity 'controller' contains '9' ports.
              *N,PRTCNT (./controller.v,6):: Number of Input ports: 3.
              *N,PRTCNT (./controller.v,6):: Number of Output ports: 6.
        File: ./lfsr.v (1)
          Logfile: hal.log (1)
            *N,PRTCNT (./lfsr.v,2|0): Module/Entity 'lfsr' contains '6' ports.
              *N,PRTCNT (./lfsr.v,2):: Number of Input ports: 4.
              *N,PRTCNT (./lfsr.v,2):: Number of Output ports: 2.
        File: ./misr.v (1)
          Logfile: hal.log (1)
            *N,PRTCNT (./misr.v,1|0): Module/Entity 'misr' contains '6' ports.
              *N,PRTCNT (./misr.v,1):: Number of Input ports: 4.
              *N,PRTCNT (./misr.v,1):: Number of Output ports: 2.
        File: ./top.v (1)
          Logfile: hal.log (1)
            *N,PRTCNT (./top.v,2|0): Module/Entity 'top' contains '12' ports.
              *N,PRTCNT (./top.v,2):: Number of Input ports: 8.
              *N,PRTCNT (./top.v,2):: Number of Output ports: 4.
        File: ./wrappers.v (1)
          Logfile: hal.log (1)
            *N,PRTCNT (./wrappers.v,3|0): Module/Entity 'lfsrmux' contains '4' ports.
              *N,PRTCNT (./wrappers.v,3):: Number of Input ports: 3.
              *N,PRTCNT (./wrappers.v,3):: Number of Output ports: 1.
